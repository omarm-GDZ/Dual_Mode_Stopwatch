
Stopwatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000207c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000207c  00002110  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800068  00800068  00002118  2**0
                  ALLOC
  3 .stab         000013ec  00000000  00000000  00002118  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000007e1  00000000  00000000  00003504  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00003ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00003e25  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00003f95  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00005bde  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00006ac9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00007878  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  000079d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00007c65  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008433  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 eb 05 	jmp	0xbd6	; 0xbd6 <__vector_1>
       8:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__vector_2>
       c:	0c 94 2e 06 	jmp	0xc5c	; 0xc5c <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ae 36       	cpi	r26, 0x6E	; 110
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ec e7       	ldi	r30, 0x7C	; 124
      78:	f0 e2       	ldi	r31, 0x20	; 32
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <main>
      8a:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 05 10 	jmp	0x200a	; 0x200a <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 21 10 	jmp	0x2042	; 0x2042 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 11 10 	jmp	0x2022	; 0x2022 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 2d 10 	jmp	0x205a	; 0x205a <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 11 10 	jmp	0x2022	; 0x2022 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 2d 10 	jmp	0x205a	; 0x205a <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 05 10 	jmp	0x200a	; 0x200a <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 21 10 	jmp	0x2042	; 0x2042 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 11 10 	jmp	0x2022	; 0x2022 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 2d 10 	jmp	0x205a	; 0x205a <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 11 10 	jmp	0x2022	; 0x2022 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 2d 10 	jmp	0x205a	; 0x205a <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 11 10 	jmp	0x2022	; 0x2022 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 2d 10 	jmp	0x205a	; 0x205a <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 15 10 	jmp	0x202a	; 0x202a <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 31 10 	jmp	0x2062	; 0x2062 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <__vector_7>:
#include<util/delay.h>
unsigned char sec=0,min=0,hrs=0,countdown_flag=0,flag=0,pause_flag=0;
void Timer1_Init(void);
void INT_Init(void);
void Display_Time(void);
ISR(TIMER1_COMPA_vect){
     b46:	1f 92       	push	r1
     b48:	0f 92       	push	r0
     b4a:	0f b6       	in	r0, 0x3f	; 63
     b4c:	0f 92       	push	r0
     b4e:	11 24       	eor	r1, r1
     b50:	8f 93       	push	r24
     b52:	af 93       	push	r26
     b54:	bf 93       	push	r27
     b56:	ef 93       	push	r30
     b58:	ff 93       	push	r31
     b5a:	df 93       	push	r29
     b5c:	cf 93       	push	r28
     b5e:	cd b7       	in	r28, 0x3d	; 61
     b60:	de b7       	in	r29, 0x3e	; 62
	if(countdown_flag==0)
     b62:	80 91 6b 00 	lds	r24, 0x006B
     b66:	88 23       	and	r24, r24
     b68:	31 f4       	brne	.+12     	; 0xb76 <__vector_7+0x30>
		sec++;
     b6a:	80 91 68 00 	lds	r24, 0x0068
     b6e:	8f 5f       	subi	r24, 0xFF	; 255
     b70:	80 93 68 00 	sts	0x0068, r24
     b74:	24 c0       	rjmp	.+72     	; 0xbbe <__vector_7+0x78>
	else if(countdown_flag==1)
     b76:	80 91 6b 00 	lds	r24, 0x006B
     b7a:	81 30       	cpi	r24, 0x01	; 1
     b7c:	01 f5       	brne	.+64     	; 0xbbe <__vector_7+0x78>
	{
		if(hrs==0 && min==0 && sec==0)
     b7e:	80 91 6a 00 	lds	r24, 0x006A
     b82:	88 23       	and	r24, r24
     b84:	b9 f4       	brne	.+46     	; 0xbb4 <__vector_7+0x6e>
     b86:	80 91 69 00 	lds	r24, 0x0069
     b8a:	88 23       	and	r24, r24
     b8c:	99 f4       	brne	.+38     	; 0xbb4 <__vector_7+0x6e>
     b8e:	80 91 68 00 	lds	r24, 0x0068
     b92:	88 23       	and	r24, r24
     b94:	79 f4       	brne	.+30     	; 0xbb4 <__vector_7+0x6e>
		{
			PORTD|=(1<<PD0);
     b96:	a2 e3       	ldi	r26, 0x32	; 50
     b98:	b0 e0       	ldi	r27, 0x00	; 0
     b9a:	e2 e3       	ldi	r30, 0x32	; 50
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	80 81       	ld	r24, Z
     ba0:	81 60       	ori	r24, 0x01	; 1
     ba2:	8c 93       	st	X, r24
			TCCR1B &=~(1<<CS12) &~(1<<CS10);
     ba4:	ae e4       	ldi	r26, 0x4E	; 78
     ba6:	b0 e0       	ldi	r27, 0x00	; 0
     ba8:	ee e4       	ldi	r30, 0x4E	; 78
     baa:	f0 e0       	ldi	r31, 0x00	; 0
     bac:	80 81       	ld	r24, Z
     bae:	8a 7f       	andi	r24, 0xFA	; 250
     bb0:	8c 93       	st	X, r24
     bb2:	05 c0       	rjmp	.+10     	; 0xbbe <__vector_7+0x78>
		}
		else sec--;
     bb4:	80 91 68 00 	lds	r24, 0x0068
     bb8:	81 50       	subi	r24, 0x01	; 1
     bba:	80 93 68 00 	sts	0x0068, r24
	}
}
     bbe:	cf 91       	pop	r28
     bc0:	df 91       	pop	r29
     bc2:	ff 91       	pop	r31
     bc4:	ef 91       	pop	r30
     bc6:	bf 91       	pop	r27
     bc8:	af 91       	pop	r26
     bca:	8f 91       	pop	r24
     bcc:	0f 90       	pop	r0
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	0f 90       	pop	r0
     bd2:	1f 90       	pop	r1
     bd4:	18 95       	reti

00000bd6 <__vector_1>:
ISR(INT0_vect){
     bd6:	1f 92       	push	r1
     bd8:	0f 92       	push	r0
     bda:	0f b6       	in	r0, 0x3f	; 63
     bdc:	0f 92       	push	r0
     bde:	11 24       	eor	r1, r1
     be0:	df 93       	push	r29
     be2:	cf 93       	push	r28
     be4:	cd b7       	in	r28, 0x3d	; 61
     be6:	de b7       	in	r29, 0x3e	; 62
	sec=0;
     be8:	10 92 68 00 	sts	0x0068, r1
	min=0;
     bec:	10 92 69 00 	sts	0x0069, r1
	hrs=0;
     bf0:	10 92 6a 00 	sts	0x006A, r1
	countdown_flag=0;
     bf4:	10 92 6b 00 	sts	0x006B, r1
}
     bf8:	cf 91       	pop	r28
     bfa:	df 91       	pop	r29
     bfc:	0f 90       	pop	r0
     bfe:	0f be       	out	0x3f, r0	; 63
     c00:	0f 90       	pop	r0
     c02:	1f 90       	pop	r1
     c04:	18 95       	reti

00000c06 <__vector_2>:
ISR(INT1_vect){
     c06:	1f 92       	push	r1
     c08:	0f 92       	push	r0
     c0a:	0f b6       	in	r0, 0x3f	; 63
     c0c:	0f 92       	push	r0
     c0e:	11 24       	eor	r1, r1
     c10:	8f 93       	push	r24
     c12:	af 93       	push	r26
     c14:	bf 93       	push	r27
     c16:	ef 93       	push	r30
     c18:	ff 93       	push	r31
     c1a:	df 93       	push	r29
     c1c:	cf 93       	push	r28
     c1e:	cd b7       	in	r28, 0x3d	; 61
     c20:	de b7       	in	r29, 0x3e	; 62
	TCCR1B &=~(1<<CS12) &~(1<<CS10);
     c22:	ae e4       	ldi	r26, 0x4E	; 78
     c24:	b0 e0       	ldi	r27, 0x00	; 0
     c26:	ee e4       	ldi	r30, 0x4E	; 78
     c28:	f0 e0       	ldi	r31, 0x00	; 0
     c2a:	80 81       	ld	r24, Z
     c2c:	8a 7f       	andi	r24, 0xFA	; 250
     c2e:	8c 93       	st	X, r24
	pause_flag=1;
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	80 93 6d 00 	sts	0x006D, r24
	PORTD&=~(1<<PD0);
     c36:	a2 e3       	ldi	r26, 0x32	; 50
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	e2 e3       	ldi	r30, 0x32	; 50
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	80 81       	ld	r24, Z
     c40:	8e 7f       	andi	r24, 0xFE	; 254
     c42:	8c 93       	st	X, r24
}
     c44:	cf 91       	pop	r28
     c46:	df 91       	pop	r29
     c48:	ff 91       	pop	r31
     c4a:	ef 91       	pop	r30
     c4c:	bf 91       	pop	r27
     c4e:	af 91       	pop	r26
     c50:	8f 91       	pop	r24
     c52:	0f 90       	pop	r0
     c54:	0f be       	out	0x3f, r0	; 63
     c56:	0f 90       	pop	r0
     c58:	1f 90       	pop	r1
     c5a:	18 95       	reti

00000c5c <__vector_3>:
ISR(INT2_vect){
     c5c:	1f 92       	push	r1
     c5e:	0f 92       	push	r0
     c60:	0f b6       	in	r0, 0x3f	; 63
     c62:	0f 92       	push	r0
     c64:	11 24       	eor	r1, r1
     c66:	2f 93       	push	r18
     c68:	3f 93       	push	r19
     c6a:	4f 93       	push	r20
     c6c:	5f 93       	push	r21
     c6e:	6f 93       	push	r22
     c70:	7f 93       	push	r23
     c72:	8f 93       	push	r24
     c74:	9f 93       	push	r25
     c76:	af 93       	push	r26
     c78:	bf 93       	push	r27
     c7a:	ef 93       	push	r30
     c7c:	ff 93       	push	r31
     c7e:	df 93       	push	r29
     c80:	cf 93       	push	r28
     c82:	cd b7       	in	r28, 0x3d	; 61
     c84:	de b7       	in	r29, 0x3e	; 62
	Timer1_Init();
     c86:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <Timer1_Init>
	pause_flag=0;
     c8a:	10 92 6d 00 	sts	0x006D, r1
}
     c8e:	cf 91       	pop	r28
     c90:	df 91       	pop	r29
     c92:	ff 91       	pop	r31
     c94:	ef 91       	pop	r30
     c96:	bf 91       	pop	r27
     c98:	af 91       	pop	r26
     c9a:	9f 91       	pop	r25
     c9c:	8f 91       	pop	r24
     c9e:	7f 91       	pop	r23
     ca0:	6f 91       	pop	r22
     ca2:	5f 91       	pop	r21
     ca4:	4f 91       	pop	r20
     ca6:	3f 91       	pop	r19
     ca8:	2f 91       	pop	r18
     caa:	0f 90       	pop	r0
     cac:	0f be       	out	0x3f, r0	; 63
     cae:	0f 90       	pop	r0
     cb0:	1f 90       	pop	r1
     cb2:	18 95       	reti

00000cb4 <main>:
int main(void){
     cb4:	0f 93       	push	r16
     cb6:	1f 93       	push	r17
     cb8:	df 93       	push	r29
     cba:	cf 93       	push	r28
     cbc:	cd b7       	in	r28, 0x3d	; 61
     cbe:	de b7       	in	r29, 0x3e	; 62
     cc0:	c2 56       	subi	r28, 0x62	; 98
     cc2:	d0 40       	sbci	r29, 0x00	; 0
     cc4:	0f b6       	in	r0, 0x3f	; 63
     cc6:	f8 94       	cli
     cc8:	de bf       	out	0x3e, r29	; 62
     cca:	0f be       	out	0x3f, r0	; 63
     ccc:	cd bf       	out	0x3d, r28	; 61
	DDRC |=0x0F;
     cce:	a4 e3       	ldi	r26, 0x34	; 52
     cd0:	b0 e0       	ldi	r27, 0x00	; 0
     cd2:	e4 e3       	ldi	r30, 0x34	; 52
     cd4:	f0 e0       	ldi	r31, 0x00	; 0
     cd6:	80 81       	ld	r24, Z
     cd8:	8f 60       	ori	r24, 0x0F	; 15
     cda:	8c 93       	st	X, r24
	DDRA =0xFF;
     cdc:	ea e3       	ldi	r30, 0x3A	; 58
     cde:	f0 e0       	ldi	r31, 0x00	; 0
     ce0:	8f ef       	ldi	r24, 0xFF	; 255
     ce2:	80 83       	st	Z, r24
	DDRB=0x00;
     ce4:	e7 e3       	ldi	r30, 0x37	; 55
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	10 82       	st	Z, r1
	DDRD|=(1<<PD0) |(1<<PD4) |(1<<PD5);
     cea:	a1 e3       	ldi	r26, 0x31	; 49
     cec:	b0 e0       	ldi	r27, 0x00	; 0
     cee:	e1 e3       	ldi	r30, 0x31	; 49
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	80 81       	ld	r24, Z
     cf4:	81 63       	ori	r24, 0x31	; 49
     cf6:	8c 93       	st	X, r24
	DDRD &=~(1<<PD2) &~(1<<PD3);
     cf8:	a1 e3       	ldi	r26, 0x31	; 49
     cfa:	b0 e0       	ldi	r27, 0x00	; 0
     cfc:	e1 e3       	ldi	r30, 0x31	; 49
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	80 81       	ld	r24, Z
     d02:	83 7f       	andi	r24, 0xF3	; 243
     d04:	8c 93       	st	X, r24
	PORTC&=0xF0;
     d06:	a5 e3       	ldi	r26, 0x35	; 53
     d08:	b0 e0       	ldi	r27, 0x00	; 0
     d0a:	e5 e3       	ldi	r30, 0x35	; 53
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	80 81       	ld	r24, Z
     d10:	80 7f       	andi	r24, 0xF0	; 240
     d12:	8c 93       	st	X, r24
	PORTB=0xFF;
     d14:	e8 e3       	ldi	r30, 0x38	; 56
     d16:	f0 e0       	ldi	r31, 0x00	; 0
     d18:	8f ef       	ldi	r24, 0xFF	; 255
     d1a:	80 83       	st	Z, r24
	PORTD|=(1<<PD2);
     d1c:	a2 e3       	ldi	r26, 0x32	; 50
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
     d20:	e2 e3       	ldi	r30, 0x32	; 50
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	84 60       	ori	r24, 0x04	; 4
     d28:	8c 93       	st	X, r24
	SREG|=(1<<7);
     d2a:	af e5       	ldi	r26, 0x5F	; 95
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	ef e5       	ldi	r30, 0x5F	; 95
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	80 81       	ld	r24, Z
     d34:	80 68       	ori	r24, 0x80	; 128
     d36:	8c 93       	st	X, r24
	Timer1_Init();
     d38:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <Timer1_Init>
	INT_Init();
     d3c:	0e 94 25 0c 	call	0x184a	; 0x184a <INT_Init>
	while(1){
		if(countdown_flag==0){
     d40:	80 91 6b 00 	lds	r24, 0x006B
     d44:	88 23       	and	r24, r24
     d46:	09 f0       	breq	.+2      	; 0xd4a <main+0x96>
     d48:	41 c0       	rjmp	.+130    	; 0xdcc <main+0x118>
			PORTD|=(1<<PD4);
     d4a:	a2 e3       	ldi	r26, 0x32	; 50
     d4c:	b0 e0       	ldi	r27, 0x00	; 0
     d4e:	e2 e3       	ldi	r30, 0x32	; 50
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	80 81       	ld	r24, Z
     d54:	80 61       	ori	r24, 0x10	; 16
     d56:	8c 93       	st	X, r24
			PORTD&=~(1<<PD5);
     d58:	a2 e3       	ldi	r26, 0x32	; 50
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	e2 e3       	ldi	r30, 0x32	; 50
     d5e:	f0 e0       	ldi	r31, 0x00	; 0
     d60:	80 81       	ld	r24, Z
     d62:	8f 7d       	andi	r24, 0xDF	; 223
     d64:	8c 93       	st	X, r24
			Display_Time();
     d66:	0e 94 41 0c 	call	0x1882	; 0x1882 <Display_Time>
			if(sec==60 && pause_flag==0)
     d6a:	80 91 68 00 	lds	r24, 0x0068
     d6e:	8c 33       	cpi	r24, 0x3C	; 60
     d70:	69 f4       	brne	.+26     	; 0xd8c <main+0xd8>
     d72:	80 91 6d 00 	lds	r24, 0x006D
     d76:	88 23       	and	r24, r24
     d78:	49 f4       	brne	.+18     	; 0xd8c <main+0xd8>
			{
				sec=0;
     d7a:	10 92 68 00 	sts	0x0068, r1
				min++;
     d7e:	80 91 69 00 	lds	r24, 0x0069
     d82:	8f 5f       	subi	r24, 0xFF	; 255
     d84:	80 93 69 00 	sts	0x0069, r24
				Display_Time();
     d88:	0e 94 41 0c 	call	0x1882	; 0x1882 <Display_Time>
			}
			if(min==60 && pause_flag==0)
     d8c:	80 91 69 00 	lds	r24, 0x0069
     d90:	8c 33       	cpi	r24, 0x3C	; 60
     d92:	69 f4       	brne	.+26     	; 0xdae <main+0xfa>
     d94:	80 91 6d 00 	lds	r24, 0x006D
     d98:	88 23       	and	r24, r24
     d9a:	49 f4       	brne	.+18     	; 0xdae <main+0xfa>
			{
				min=0;
     d9c:	10 92 69 00 	sts	0x0069, r1
				hrs++;
     da0:	80 91 6a 00 	lds	r24, 0x006A
     da4:	8f 5f       	subi	r24, 0xFF	; 255
     da6:	80 93 6a 00 	sts	0x006A, r24
				Display_Time();
     daa:	0e 94 41 0c 	call	0x1882	; 0x1882 <Display_Time>
			}
			if(hrs==24 && pause_flag==0)
     dae:	80 91 6a 00 	lds	r24, 0x006A
     db2:	88 31       	cpi	r24, 0x18	; 24
     db4:	09 f0       	breq	.+2      	; 0xdb8 <main+0x104>
     db6:	4a c0       	rjmp	.+148    	; 0xe4c <main+0x198>
     db8:	80 91 6d 00 	lds	r24, 0x006D
     dbc:	88 23       	and	r24, r24
     dbe:	09 f0       	breq	.+2      	; 0xdc2 <main+0x10e>
     dc0:	45 c0       	rjmp	.+138    	; 0xe4c <main+0x198>
			{
				hrs=0;
     dc2:	10 92 6a 00 	sts	0x006A, r1
				Display_Time();
     dc6:	0e 94 41 0c 	call	0x1882	; 0x1882 <Display_Time>
     dca:	40 c0       	rjmp	.+128    	; 0xe4c <main+0x198>
			}
		}
		else if(countdown_flag==1)
     dcc:	80 91 6b 00 	lds	r24, 0x006B
     dd0:	81 30       	cpi	r24, 0x01	; 1
     dd2:	e1 f5       	brne	.+120    	; 0xe4c <main+0x198>
		{
			PORTD|=(1<<PD5);
     dd4:	a2 e3       	ldi	r26, 0x32	; 50
     dd6:	b0 e0       	ldi	r27, 0x00	; 0
     dd8:	e2 e3       	ldi	r30, 0x32	; 50
     dda:	f0 e0       	ldi	r31, 0x00	; 0
     ddc:	80 81       	ld	r24, Z
     dde:	80 62       	ori	r24, 0x20	; 32
     de0:	8c 93       	st	X, r24
			PORTD&=~(1<<PD4);
     de2:	a2 e3       	ldi	r26, 0x32	; 50
     de4:	b0 e0       	ldi	r27, 0x00	; 0
     de6:	e2 e3       	ldi	r30, 0x32	; 50
     de8:	f0 e0       	ldi	r31, 0x00	; 0
     dea:	80 81       	ld	r24, Z
     dec:	8f 7e       	andi	r24, 0xEF	; 239
     dee:	8c 93       	st	X, r24
			Display_Time();
     df0:	0e 94 41 0c 	call	0x1882	; 0x1882 <Display_Time>
			if(sec>59 && min>0)
     df4:	80 91 68 00 	lds	r24, 0x0068
     df8:	8c 33       	cpi	r24, 0x3C	; 60
     dfa:	78 f0       	brcs	.+30     	; 0xe1a <main+0x166>
     dfc:	80 91 69 00 	lds	r24, 0x0069
     e00:	88 23       	and	r24, r24
     e02:	59 f0       	breq	.+22     	; 0xe1a <main+0x166>
			{
				sec=59;
     e04:	8b e3       	ldi	r24, 0x3B	; 59
     e06:	80 93 68 00 	sts	0x0068, r24
				min--;
     e0a:	80 91 69 00 	lds	r24, 0x0069
     e0e:	81 50       	subi	r24, 0x01	; 1
     e10:	80 93 69 00 	sts	0x0069, r24
				Display_Time();
     e14:	0e 94 41 0c 	call	0x1882	; 0x1882 <Display_Time>
     e18:	19 c0       	rjmp	.+50     	; 0xe4c <main+0x198>
			}
			else if(min==0 && sec>60 && hrs>0){
     e1a:	80 91 69 00 	lds	r24, 0x0069
     e1e:	88 23       	and	r24, r24
     e20:	a9 f4       	brne	.+42     	; 0xe4c <main+0x198>
     e22:	80 91 68 00 	lds	r24, 0x0068
     e26:	8d 33       	cpi	r24, 0x3D	; 61
     e28:	88 f0       	brcs	.+34     	; 0xe4c <main+0x198>
     e2a:	80 91 6a 00 	lds	r24, 0x006A
     e2e:	88 23       	and	r24, r24
     e30:	69 f0       	breq	.+26     	; 0xe4c <main+0x198>

				sec=59;
     e32:	8b e3       	ldi	r24, 0x3B	; 59
     e34:	80 93 68 00 	sts	0x0068, r24
				min=59;
     e38:	8b e3       	ldi	r24, 0x3B	; 59
     e3a:	80 93 69 00 	sts	0x0069, r24
				hrs--;
     e3e:	80 91 6a 00 	lds	r24, 0x006A
     e42:	81 50       	subi	r24, 0x01	; 1
     e44:	80 93 6a 00 	sts	0x006A, r24
				Display_Time();
     e48:	0e 94 41 0c 	call	0x1882	; 0x1882 <Display_Time>
			}
		}
		if(!(PINB & (1<<PB7))){
     e4c:	e6 e3       	ldi	r30, 0x36	; 54
     e4e:	f0 e0       	ldi	r31, 0x00	; 0
     e50:	80 81       	ld	r24, Z
     e52:	88 23       	and	r24, r24
     e54:	0c f4       	brge	.+2      	; 0xe58 <main+0x1a4>
     e56:	da c0       	rjmp	.+436    	; 0x100c <main+0x358>
     e58:	fe 01       	movw	r30, r28
     e5a:	e1 5a       	subi	r30, 0xA1	; 161
     e5c:	ff 4f       	sbci	r31, 0xFF	; 255
     e5e:	80 e0       	ldi	r24, 0x00	; 0
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	a0 ef       	ldi	r26, 0xF0	; 240
     e64:	b1 e4       	ldi	r27, 0x41	; 65
     e66:	80 83       	st	Z, r24
     e68:	91 83       	std	Z+1, r25	; 0x01
     e6a:	a2 83       	std	Z+2, r26	; 0x02
     e6c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e6e:	8e 01       	movw	r16, r28
     e70:	05 5a       	subi	r16, 0xA5	; 165
     e72:	1f 4f       	sbci	r17, 0xFF	; 255
     e74:	fe 01       	movw	r30, r28
     e76:	e1 5a       	subi	r30, 0xA1	; 161
     e78:	ff 4f       	sbci	r31, 0xFF	; 255
     e7a:	60 81       	ld	r22, Z
     e7c:	71 81       	ldd	r23, Z+1	; 0x01
     e7e:	82 81       	ldd	r24, Z+2	; 0x02
     e80:	93 81       	ldd	r25, Z+3	; 0x03
     e82:	20 e0       	ldi	r18, 0x00	; 0
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	4a e7       	ldi	r20, 0x7A	; 122
     e88:	55 e4       	ldi	r21, 0x45	; 69
     e8a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e8e:	dc 01       	movw	r26, r24
     e90:	cb 01       	movw	r24, r22
     e92:	f8 01       	movw	r30, r16
     e94:	80 83       	st	Z, r24
     e96:	91 83       	std	Z+1, r25	; 0x01
     e98:	a2 83       	std	Z+2, r26	; 0x02
     e9a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e9c:	fe 01       	movw	r30, r28
     e9e:	e5 5a       	subi	r30, 0xA5	; 165
     ea0:	ff 4f       	sbci	r31, 0xFF	; 255
     ea2:	60 81       	ld	r22, Z
     ea4:	71 81       	ldd	r23, Z+1	; 0x01
     ea6:	82 81       	ldd	r24, Z+2	; 0x02
     ea8:	93 81       	ldd	r25, Z+3	; 0x03
     eaa:	20 e0       	ldi	r18, 0x00	; 0
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	40 e8       	ldi	r20, 0x80	; 128
     eb0:	5f e3       	ldi	r21, 0x3F	; 63
     eb2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     eb6:	88 23       	and	r24, r24
     eb8:	44 f4       	brge	.+16     	; 0xeca <main+0x216>
		__ticks = 1;
     eba:	fe 01       	movw	r30, r28
     ebc:	e7 5a       	subi	r30, 0xA7	; 167
     ebe:	ff 4f       	sbci	r31, 0xFF	; 255
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	91 83       	std	Z+1, r25	; 0x01
     ec6:	80 83       	st	Z, r24
     ec8:	64 c0       	rjmp	.+200    	; 0xf92 <main+0x2de>
	else if (__tmp > 65535)
     eca:	fe 01       	movw	r30, r28
     ecc:	e5 5a       	subi	r30, 0xA5	; 165
     ece:	ff 4f       	sbci	r31, 0xFF	; 255
     ed0:	60 81       	ld	r22, Z
     ed2:	71 81       	ldd	r23, Z+1	; 0x01
     ed4:	82 81       	ldd	r24, Z+2	; 0x02
     ed6:	93 81       	ldd	r25, Z+3	; 0x03
     ed8:	20 e0       	ldi	r18, 0x00	; 0
     eda:	3f ef       	ldi	r19, 0xFF	; 255
     edc:	4f e7       	ldi	r20, 0x7F	; 127
     ede:	57 e4       	ldi	r21, 0x47	; 71
     ee0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     ee4:	18 16       	cp	r1, r24
     ee6:	0c f0       	brlt	.+2      	; 0xeea <main+0x236>
     ee8:	43 c0       	rjmp	.+134    	; 0xf70 <main+0x2bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eea:	fe 01       	movw	r30, r28
     eec:	e1 5a       	subi	r30, 0xA1	; 161
     eee:	ff 4f       	sbci	r31, 0xFF	; 255
     ef0:	60 81       	ld	r22, Z
     ef2:	71 81       	ldd	r23, Z+1	; 0x01
     ef4:	82 81       	ldd	r24, Z+2	; 0x02
     ef6:	93 81       	ldd	r25, Z+3	; 0x03
     ef8:	20 e0       	ldi	r18, 0x00	; 0
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	40 e2       	ldi	r20, 0x20	; 32
     efe:	51 e4       	ldi	r21, 0x41	; 65
     f00:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f04:	dc 01       	movw	r26, r24
     f06:	cb 01       	movw	r24, r22
     f08:	8e 01       	movw	r16, r28
     f0a:	07 5a       	subi	r16, 0xA7	; 167
     f0c:	1f 4f       	sbci	r17, 0xFF	; 255
     f0e:	bc 01       	movw	r22, r24
     f10:	cd 01       	movw	r24, r26
     f12:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f16:	dc 01       	movw	r26, r24
     f18:	cb 01       	movw	r24, r22
     f1a:	f8 01       	movw	r30, r16
     f1c:	91 83       	std	Z+1, r25	; 0x01
     f1e:	80 83       	st	Z, r24
     f20:	1f c0       	rjmp	.+62     	; 0xf60 <main+0x2ac>
     f22:	fe 01       	movw	r30, r28
     f24:	e9 5a       	subi	r30, 0xA9	; 169
     f26:	ff 4f       	sbci	r31, 0xFF	; 255
     f28:	80 e9       	ldi	r24, 0x90	; 144
     f2a:	91 e0       	ldi	r25, 0x01	; 1
     f2c:	91 83       	std	Z+1, r25	; 0x01
     f2e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f30:	fe 01       	movw	r30, r28
     f32:	e9 5a       	subi	r30, 0xA9	; 169
     f34:	ff 4f       	sbci	r31, 0xFF	; 255
     f36:	80 81       	ld	r24, Z
     f38:	91 81       	ldd	r25, Z+1	; 0x01
     f3a:	01 97       	sbiw	r24, 0x01	; 1
     f3c:	f1 f7       	brne	.-4      	; 0xf3a <main+0x286>
     f3e:	fe 01       	movw	r30, r28
     f40:	e9 5a       	subi	r30, 0xA9	; 169
     f42:	ff 4f       	sbci	r31, 0xFF	; 255
     f44:	91 83       	std	Z+1, r25	; 0x01
     f46:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f48:	de 01       	movw	r26, r28
     f4a:	a7 5a       	subi	r26, 0xA7	; 167
     f4c:	bf 4f       	sbci	r27, 0xFF	; 255
     f4e:	fe 01       	movw	r30, r28
     f50:	e7 5a       	subi	r30, 0xA7	; 167
     f52:	ff 4f       	sbci	r31, 0xFF	; 255
     f54:	80 81       	ld	r24, Z
     f56:	91 81       	ldd	r25, Z+1	; 0x01
     f58:	01 97       	sbiw	r24, 0x01	; 1
     f5a:	11 96       	adiw	r26, 0x01	; 1
     f5c:	9c 93       	st	X, r25
     f5e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f60:	fe 01       	movw	r30, r28
     f62:	e7 5a       	subi	r30, 0xA7	; 167
     f64:	ff 4f       	sbci	r31, 0xFF	; 255
     f66:	80 81       	ld	r24, Z
     f68:	91 81       	ldd	r25, Z+1	; 0x01
     f6a:	00 97       	sbiw	r24, 0x00	; 0
     f6c:	d1 f6       	brne	.-76     	; 0xf22 <main+0x26e>
     f6e:	28 c0       	rjmp	.+80     	; 0xfc0 <main+0x30c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f70:	8e 01       	movw	r16, r28
     f72:	07 5a       	subi	r16, 0xA7	; 167
     f74:	1f 4f       	sbci	r17, 0xFF	; 255
     f76:	fe 01       	movw	r30, r28
     f78:	e5 5a       	subi	r30, 0xA5	; 165
     f7a:	ff 4f       	sbci	r31, 0xFF	; 255
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	93 81       	ldd	r25, Z+3	; 0x03
     f84:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f88:	dc 01       	movw	r26, r24
     f8a:	cb 01       	movw	r24, r22
     f8c:	f8 01       	movw	r30, r16
     f8e:	91 83       	std	Z+1, r25	; 0x01
     f90:	80 83       	st	Z, r24
     f92:	de 01       	movw	r26, r28
     f94:	ab 5a       	subi	r26, 0xAB	; 171
     f96:	bf 4f       	sbci	r27, 0xFF	; 255
     f98:	fe 01       	movw	r30, r28
     f9a:	e7 5a       	subi	r30, 0xA7	; 167
     f9c:	ff 4f       	sbci	r31, 0xFF	; 255
     f9e:	80 81       	ld	r24, Z
     fa0:	91 81       	ldd	r25, Z+1	; 0x01
     fa2:	11 96       	adiw	r26, 0x01	; 1
     fa4:	9c 93       	st	X, r25
     fa6:	8e 93       	st	-X, r24
     fa8:	fe 01       	movw	r30, r28
     faa:	eb 5a       	subi	r30, 0xAB	; 171
     fac:	ff 4f       	sbci	r31, 0xFF	; 255
     fae:	80 81       	ld	r24, Z
     fb0:	91 81       	ldd	r25, Z+1	; 0x01
     fb2:	01 97       	sbiw	r24, 0x01	; 1
     fb4:	f1 f7       	brne	.-4      	; 0xfb2 <main+0x2fe>
     fb6:	fe 01       	movw	r30, r28
     fb8:	eb 5a       	subi	r30, 0xAB	; 171
     fba:	ff 4f       	sbci	r31, 0xFF	; 255
     fbc:	91 83       	std	Z+1, r25	; 0x01
     fbe:	80 83       	st	Z, r24
			_delay_ms(30);
			if(!(PINB & (1<<PB7))){
     fc0:	e6 e3       	ldi	r30, 0x36	; 54
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	80 81       	ld	r24, Z
     fc6:	88 23       	and	r24, r24
     fc8:	fc f0       	brlt	.+62     	; 0x1008 <main+0x354>
				if(flag==0){
     fca:	80 91 6c 00 	lds	r24, 0x006C
     fce:	88 23       	and	r24, r24
     fd0:	e9 f4       	brne	.+58     	; 0x100c <main+0x358>
					flag=1;
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	80 93 6c 00 	sts	0x006C, r24
					if(countdown_flag==0)
     fd8:	80 91 6b 00 	lds	r24, 0x006B
     fdc:	88 23       	and	r24, r24
     fde:	21 f4       	brne	.+8      	; 0xfe8 <main+0x334>
						countdown_flag=1;
     fe0:	81 e0       	ldi	r24, 0x01	; 1
     fe2:	80 93 6b 00 	sts	0x006B, r24
     fe6:	12 c0       	rjmp	.+36     	; 0x100c <main+0x358>
					else {
						countdown_flag=0;
     fe8:	10 92 6b 00 	sts	0x006B, r1
						PORTD&=~(1<<PD0);
     fec:	a2 e3       	ldi	r26, 0x32	; 50
     fee:	b0 e0       	ldi	r27, 0x00	; 0
     ff0:	e2 e3       	ldi	r30, 0x32	; 50
     ff2:	f0 e0       	ldi	r31, 0x00	; 0
     ff4:	80 81       	ld	r24, Z
     ff6:	8e 7f       	andi	r24, 0xFE	; 254
     ff8:	8c 93       	st	X, r24
						if(pause_flag==0)
     ffa:	80 91 6d 00 	lds	r24, 0x006D
     ffe:	88 23       	and	r24, r24
    1000:	29 f4       	brne	.+10     	; 0x100c <main+0x358>
							Timer1_Init();
    1002:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <Timer1_Init>
    1006:	02 c0       	rjmp	.+4      	; 0x100c <main+0x358>
					}
				}
			}else flag=0;
    1008:	10 92 6c 00 	sts	0x006C, r1
		}
		// decrement hours
		if(!(PINB &(1<<PB0)))
    100c:	e6 e3       	ldi	r30, 0x36	; 54
    100e:	f0 e0       	ldi	r31, 0x00	; 0
    1010:	80 81       	ld	r24, Z
    1012:	88 2f       	mov	r24, r24
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	81 70       	andi	r24, 0x01	; 1
    1018:	90 70       	andi	r25, 0x00	; 0
    101a:	00 97       	sbiw	r24, 0x00	; 0
    101c:	09 f0       	breq	.+2      	; 0x1020 <main+0x36c>
    101e:	d4 c0       	rjmp	.+424    	; 0x11c8 <main+0x514>
    1020:	fe 01       	movw	r30, r28
    1022:	ef 5a       	subi	r30, 0xAF	; 175
    1024:	ff 4f       	sbci	r31, 0xFF	; 255
    1026:	80 e0       	ldi	r24, 0x00	; 0
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	a0 ef       	ldi	r26, 0xF0	; 240
    102c:	b1 e4       	ldi	r27, 0x41	; 65
    102e:	80 83       	st	Z, r24
    1030:	91 83       	std	Z+1, r25	; 0x01
    1032:	a2 83       	std	Z+2, r26	; 0x02
    1034:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1036:	8e 01       	movw	r16, r28
    1038:	03 5b       	subi	r16, 0xB3	; 179
    103a:	1f 4f       	sbci	r17, 0xFF	; 255
    103c:	fe 01       	movw	r30, r28
    103e:	ef 5a       	subi	r30, 0xAF	; 175
    1040:	ff 4f       	sbci	r31, 0xFF	; 255
    1042:	60 81       	ld	r22, Z
    1044:	71 81       	ldd	r23, Z+1	; 0x01
    1046:	82 81       	ldd	r24, Z+2	; 0x02
    1048:	93 81       	ldd	r25, Z+3	; 0x03
    104a:	20 e0       	ldi	r18, 0x00	; 0
    104c:	30 e0       	ldi	r19, 0x00	; 0
    104e:	4a e7       	ldi	r20, 0x7A	; 122
    1050:	55 e4       	ldi	r21, 0x45	; 69
    1052:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1056:	dc 01       	movw	r26, r24
    1058:	cb 01       	movw	r24, r22
    105a:	f8 01       	movw	r30, r16
    105c:	80 83       	st	Z, r24
    105e:	91 83       	std	Z+1, r25	; 0x01
    1060:	a2 83       	std	Z+2, r26	; 0x02
    1062:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1064:	fe 01       	movw	r30, r28
    1066:	e3 5b       	subi	r30, 0xB3	; 179
    1068:	ff 4f       	sbci	r31, 0xFF	; 255
    106a:	60 81       	ld	r22, Z
    106c:	71 81       	ldd	r23, Z+1	; 0x01
    106e:	82 81       	ldd	r24, Z+2	; 0x02
    1070:	93 81       	ldd	r25, Z+3	; 0x03
    1072:	20 e0       	ldi	r18, 0x00	; 0
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	40 e8       	ldi	r20, 0x80	; 128
    1078:	5f e3       	ldi	r21, 0x3F	; 63
    107a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    107e:	88 23       	and	r24, r24
    1080:	44 f4       	brge	.+16     	; 0x1092 <main+0x3de>
		__ticks = 1;
    1082:	fe 01       	movw	r30, r28
    1084:	e5 5b       	subi	r30, 0xB5	; 181
    1086:	ff 4f       	sbci	r31, 0xFF	; 255
    1088:	81 e0       	ldi	r24, 0x01	; 1
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	91 83       	std	Z+1, r25	; 0x01
    108e:	80 83       	st	Z, r24
    1090:	64 c0       	rjmp	.+200    	; 0x115a <main+0x4a6>
	else if (__tmp > 65535)
    1092:	fe 01       	movw	r30, r28
    1094:	e3 5b       	subi	r30, 0xB3	; 179
    1096:	ff 4f       	sbci	r31, 0xFF	; 255
    1098:	60 81       	ld	r22, Z
    109a:	71 81       	ldd	r23, Z+1	; 0x01
    109c:	82 81       	ldd	r24, Z+2	; 0x02
    109e:	93 81       	ldd	r25, Z+3	; 0x03
    10a0:	20 e0       	ldi	r18, 0x00	; 0
    10a2:	3f ef       	ldi	r19, 0xFF	; 255
    10a4:	4f e7       	ldi	r20, 0x7F	; 127
    10a6:	57 e4       	ldi	r21, 0x47	; 71
    10a8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    10ac:	18 16       	cp	r1, r24
    10ae:	0c f0       	brlt	.+2      	; 0x10b2 <main+0x3fe>
    10b0:	43 c0       	rjmp	.+134    	; 0x1138 <main+0x484>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10b2:	fe 01       	movw	r30, r28
    10b4:	ef 5a       	subi	r30, 0xAF	; 175
    10b6:	ff 4f       	sbci	r31, 0xFF	; 255
    10b8:	60 81       	ld	r22, Z
    10ba:	71 81       	ldd	r23, Z+1	; 0x01
    10bc:	82 81       	ldd	r24, Z+2	; 0x02
    10be:	93 81       	ldd	r25, Z+3	; 0x03
    10c0:	20 e0       	ldi	r18, 0x00	; 0
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	40 e2       	ldi	r20, 0x20	; 32
    10c6:	51 e4       	ldi	r21, 0x41	; 65
    10c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10cc:	dc 01       	movw	r26, r24
    10ce:	cb 01       	movw	r24, r22
    10d0:	8e 01       	movw	r16, r28
    10d2:	05 5b       	subi	r16, 0xB5	; 181
    10d4:	1f 4f       	sbci	r17, 0xFF	; 255
    10d6:	bc 01       	movw	r22, r24
    10d8:	cd 01       	movw	r24, r26
    10da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10de:	dc 01       	movw	r26, r24
    10e0:	cb 01       	movw	r24, r22
    10e2:	f8 01       	movw	r30, r16
    10e4:	91 83       	std	Z+1, r25	; 0x01
    10e6:	80 83       	st	Z, r24
    10e8:	1f c0       	rjmp	.+62     	; 0x1128 <main+0x474>
    10ea:	fe 01       	movw	r30, r28
    10ec:	e7 5b       	subi	r30, 0xB7	; 183
    10ee:	ff 4f       	sbci	r31, 0xFF	; 255
    10f0:	80 e9       	ldi	r24, 0x90	; 144
    10f2:	91 e0       	ldi	r25, 0x01	; 1
    10f4:	91 83       	std	Z+1, r25	; 0x01
    10f6:	80 83       	st	Z, r24
    10f8:	fe 01       	movw	r30, r28
    10fa:	e7 5b       	subi	r30, 0xB7	; 183
    10fc:	ff 4f       	sbci	r31, 0xFF	; 255
    10fe:	80 81       	ld	r24, Z
    1100:	91 81       	ldd	r25, Z+1	; 0x01
    1102:	01 97       	sbiw	r24, 0x01	; 1
    1104:	f1 f7       	brne	.-4      	; 0x1102 <main+0x44e>
    1106:	fe 01       	movw	r30, r28
    1108:	e7 5b       	subi	r30, 0xB7	; 183
    110a:	ff 4f       	sbci	r31, 0xFF	; 255
    110c:	91 83       	std	Z+1, r25	; 0x01
    110e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1110:	de 01       	movw	r26, r28
    1112:	a5 5b       	subi	r26, 0xB5	; 181
    1114:	bf 4f       	sbci	r27, 0xFF	; 255
    1116:	fe 01       	movw	r30, r28
    1118:	e5 5b       	subi	r30, 0xB5	; 181
    111a:	ff 4f       	sbci	r31, 0xFF	; 255
    111c:	80 81       	ld	r24, Z
    111e:	91 81       	ldd	r25, Z+1	; 0x01
    1120:	01 97       	sbiw	r24, 0x01	; 1
    1122:	11 96       	adiw	r26, 0x01	; 1
    1124:	9c 93       	st	X, r25
    1126:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1128:	fe 01       	movw	r30, r28
    112a:	e5 5b       	subi	r30, 0xB5	; 181
    112c:	ff 4f       	sbci	r31, 0xFF	; 255
    112e:	80 81       	ld	r24, Z
    1130:	91 81       	ldd	r25, Z+1	; 0x01
    1132:	00 97       	sbiw	r24, 0x00	; 0
    1134:	d1 f6       	brne	.-76     	; 0x10ea <main+0x436>
    1136:	28 c0       	rjmp	.+80     	; 0x1188 <main+0x4d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1138:	8e 01       	movw	r16, r28
    113a:	05 5b       	subi	r16, 0xB5	; 181
    113c:	1f 4f       	sbci	r17, 0xFF	; 255
    113e:	fe 01       	movw	r30, r28
    1140:	e3 5b       	subi	r30, 0xB3	; 179
    1142:	ff 4f       	sbci	r31, 0xFF	; 255
    1144:	60 81       	ld	r22, Z
    1146:	71 81       	ldd	r23, Z+1	; 0x01
    1148:	82 81       	ldd	r24, Z+2	; 0x02
    114a:	93 81       	ldd	r25, Z+3	; 0x03
    114c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1150:	dc 01       	movw	r26, r24
    1152:	cb 01       	movw	r24, r22
    1154:	f8 01       	movw	r30, r16
    1156:	91 83       	std	Z+1, r25	; 0x01
    1158:	80 83       	st	Z, r24
    115a:	de 01       	movw	r26, r28
    115c:	a9 5b       	subi	r26, 0xB9	; 185
    115e:	bf 4f       	sbci	r27, 0xFF	; 255
    1160:	fe 01       	movw	r30, r28
    1162:	e5 5b       	subi	r30, 0xB5	; 181
    1164:	ff 4f       	sbci	r31, 0xFF	; 255
    1166:	80 81       	ld	r24, Z
    1168:	91 81       	ldd	r25, Z+1	; 0x01
    116a:	11 96       	adiw	r26, 0x01	; 1
    116c:	9c 93       	st	X, r25
    116e:	8e 93       	st	-X, r24
    1170:	fe 01       	movw	r30, r28
    1172:	e9 5b       	subi	r30, 0xB9	; 185
    1174:	ff 4f       	sbci	r31, 0xFF	; 255
    1176:	80 81       	ld	r24, Z
    1178:	91 81       	ldd	r25, Z+1	; 0x01
    117a:	01 97       	sbiw	r24, 0x01	; 1
    117c:	f1 f7       	brne	.-4      	; 0x117a <main+0x4c6>
    117e:	fe 01       	movw	r30, r28
    1180:	e9 5b       	subi	r30, 0xB9	; 185
    1182:	ff 4f       	sbci	r31, 0xFF	; 255
    1184:	91 83       	std	Z+1, r25	; 0x01
    1186:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if(!(PINB &(1<<PB0)))
    1188:	e6 e3       	ldi	r30, 0x36	; 54
    118a:	f0 e0       	ldi	r31, 0x00	; 0
    118c:	80 81       	ld	r24, Z
    118e:	88 2f       	mov	r24, r24
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	81 70       	andi	r24, 0x01	; 1
    1194:	90 70       	andi	r25, 0x00	; 0
    1196:	00 97       	sbiw	r24, 0x00	; 0
    1198:	a9 f4       	brne	.+42     	; 0x11c4 <main+0x510>
			{
				if(flag==0)
    119a:	80 91 6c 00 	lds	r24, 0x006C
    119e:	88 23       	and	r24, r24
    11a0:	99 f4       	brne	.+38     	; 0x11c8 <main+0x514>
				{
					flag=1;
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	80 93 6c 00 	sts	0x006C, r24
					if(hrs>0)
    11a8:	80 91 6a 00 	lds	r24, 0x006A
    11ac:	88 23       	and	r24, r24
    11ae:	31 f0       	breq	.+12     	; 0x11bc <main+0x508>
						hrs--;
    11b0:	80 91 6a 00 	lds	r24, 0x006A
    11b4:	81 50       	subi	r24, 0x01	; 1
    11b6:	80 93 6a 00 	sts	0x006A, r24
    11ba:	06 c0       	rjmp	.+12     	; 0x11c8 <main+0x514>
					else hrs=24;
    11bc:	88 e1       	ldi	r24, 0x18	; 24
    11be:	80 93 6a 00 	sts	0x006A, r24
    11c2:	02 c0       	rjmp	.+4      	; 0x11c8 <main+0x514>
				}
			}else flag=0;
    11c4:	10 92 6c 00 	sts	0x006C, r1
		}

		// decrement minutes
		if(!(PINB &(1<<PB3)))
    11c8:	e6 e3       	ldi	r30, 0x36	; 54
    11ca:	f0 e0       	ldi	r31, 0x00	; 0
    11cc:	80 81       	ld	r24, Z
    11ce:	88 2f       	mov	r24, r24
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	88 70       	andi	r24, 0x08	; 8
    11d4:	90 70       	andi	r25, 0x00	; 0
    11d6:	00 97       	sbiw	r24, 0x00	; 0
    11d8:	09 f0       	breq	.+2      	; 0x11dc <main+0x528>
    11da:	a4 c0       	rjmp	.+328    	; 0x1324 <main+0x670>
    11dc:	fe 01       	movw	r30, r28
    11de:	ed 5b       	subi	r30, 0xBD	; 189
    11e0:	ff 4f       	sbci	r31, 0xFF	; 255
    11e2:	80 e0       	ldi	r24, 0x00	; 0
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	a0 ef       	ldi	r26, 0xF0	; 240
    11e8:	b1 e4       	ldi	r27, 0x41	; 65
    11ea:	80 83       	st	Z, r24
    11ec:	91 83       	std	Z+1, r25	; 0x01
    11ee:	a2 83       	std	Z+2, r26	; 0x02
    11f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11f2:	8e 01       	movw	r16, r28
    11f4:	01 5c       	subi	r16, 0xC1	; 193
    11f6:	1f 4f       	sbci	r17, 0xFF	; 255
    11f8:	fe 01       	movw	r30, r28
    11fa:	ed 5b       	subi	r30, 0xBD	; 189
    11fc:	ff 4f       	sbci	r31, 0xFF	; 255
    11fe:	60 81       	ld	r22, Z
    1200:	71 81       	ldd	r23, Z+1	; 0x01
    1202:	82 81       	ldd	r24, Z+2	; 0x02
    1204:	93 81       	ldd	r25, Z+3	; 0x03
    1206:	20 e0       	ldi	r18, 0x00	; 0
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	4a e7       	ldi	r20, 0x7A	; 122
    120c:	55 e4       	ldi	r21, 0x45	; 69
    120e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1212:	dc 01       	movw	r26, r24
    1214:	cb 01       	movw	r24, r22
    1216:	f8 01       	movw	r30, r16
    1218:	80 83       	st	Z, r24
    121a:	91 83       	std	Z+1, r25	; 0x01
    121c:	a2 83       	std	Z+2, r26	; 0x02
    121e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1220:	fe 01       	movw	r30, r28
    1222:	ff 96       	adiw	r30, 0x3f	; 63
    1224:	60 81       	ld	r22, Z
    1226:	71 81       	ldd	r23, Z+1	; 0x01
    1228:	82 81       	ldd	r24, Z+2	; 0x02
    122a:	93 81       	ldd	r25, Z+3	; 0x03
    122c:	20 e0       	ldi	r18, 0x00	; 0
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	40 e8       	ldi	r20, 0x80	; 128
    1232:	5f e3       	ldi	r21, 0x3F	; 63
    1234:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1238:	88 23       	and	r24, r24
    123a:	2c f4       	brge	.+10     	; 0x1246 <main+0x592>
		__ticks = 1;
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	9e af       	std	Y+62, r25	; 0x3e
    1242:	8d af       	std	Y+61, r24	; 0x3d
    1244:	46 c0       	rjmp	.+140    	; 0x12d2 <main+0x61e>
	else if (__tmp > 65535)
    1246:	fe 01       	movw	r30, r28
    1248:	ff 96       	adiw	r30, 0x3f	; 63
    124a:	60 81       	ld	r22, Z
    124c:	71 81       	ldd	r23, Z+1	; 0x01
    124e:	82 81       	ldd	r24, Z+2	; 0x02
    1250:	93 81       	ldd	r25, Z+3	; 0x03
    1252:	20 e0       	ldi	r18, 0x00	; 0
    1254:	3f ef       	ldi	r19, 0xFF	; 255
    1256:	4f e7       	ldi	r20, 0x7F	; 127
    1258:	57 e4       	ldi	r21, 0x47	; 71
    125a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    125e:	18 16       	cp	r1, r24
    1260:	64 f5       	brge	.+88     	; 0x12ba <main+0x606>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1262:	fe 01       	movw	r30, r28
    1264:	ed 5b       	subi	r30, 0xBD	; 189
    1266:	ff 4f       	sbci	r31, 0xFF	; 255
    1268:	60 81       	ld	r22, Z
    126a:	71 81       	ldd	r23, Z+1	; 0x01
    126c:	82 81       	ldd	r24, Z+2	; 0x02
    126e:	93 81       	ldd	r25, Z+3	; 0x03
    1270:	20 e0       	ldi	r18, 0x00	; 0
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	40 e2       	ldi	r20, 0x20	; 32
    1276:	51 e4       	ldi	r21, 0x41	; 65
    1278:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    127c:	dc 01       	movw	r26, r24
    127e:	cb 01       	movw	r24, r22
    1280:	bc 01       	movw	r22, r24
    1282:	cd 01       	movw	r24, r26
    1284:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1288:	dc 01       	movw	r26, r24
    128a:	cb 01       	movw	r24, r22
    128c:	9e af       	std	Y+62, r25	; 0x3e
    128e:	8d af       	std	Y+61, r24	; 0x3d
    1290:	0f c0       	rjmp	.+30     	; 0x12b0 <main+0x5fc>
    1292:	80 e9       	ldi	r24, 0x90	; 144
    1294:	91 e0       	ldi	r25, 0x01	; 1
    1296:	9c af       	std	Y+60, r25	; 0x3c
    1298:	8b af       	std	Y+59, r24	; 0x3b
    129a:	8b ad       	ldd	r24, Y+59	; 0x3b
    129c:	9c ad       	ldd	r25, Y+60	; 0x3c
    129e:	01 97       	sbiw	r24, 0x01	; 1
    12a0:	f1 f7       	brne	.-4      	; 0x129e <main+0x5ea>
    12a2:	9c af       	std	Y+60, r25	; 0x3c
    12a4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12a6:	8d ad       	ldd	r24, Y+61	; 0x3d
    12a8:	9e ad       	ldd	r25, Y+62	; 0x3e
    12aa:	01 97       	sbiw	r24, 0x01	; 1
    12ac:	9e af       	std	Y+62, r25	; 0x3e
    12ae:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12b0:	8d ad       	ldd	r24, Y+61	; 0x3d
    12b2:	9e ad       	ldd	r25, Y+62	; 0x3e
    12b4:	00 97       	sbiw	r24, 0x00	; 0
    12b6:	69 f7       	brne	.-38     	; 0x1292 <main+0x5de>
    12b8:	16 c0       	rjmp	.+44     	; 0x12e6 <main+0x632>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12ba:	fe 01       	movw	r30, r28
    12bc:	ff 96       	adiw	r30, 0x3f	; 63
    12be:	60 81       	ld	r22, Z
    12c0:	71 81       	ldd	r23, Z+1	; 0x01
    12c2:	82 81       	ldd	r24, Z+2	; 0x02
    12c4:	93 81       	ldd	r25, Z+3	; 0x03
    12c6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    12ca:	dc 01       	movw	r26, r24
    12cc:	cb 01       	movw	r24, r22
    12ce:	9e af       	std	Y+62, r25	; 0x3e
    12d0:	8d af       	std	Y+61, r24	; 0x3d
    12d2:	8d ad       	ldd	r24, Y+61	; 0x3d
    12d4:	9e ad       	ldd	r25, Y+62	; 0x3e
    12d6:	9a af       	std	Y+58, r25	; 0x3a
    12d8:	89 af       	std	Y+57, r24	; 0x39
    12da:	89 ad       	ldd	r24, Y+57	; 0x39
    12dc:	9a ad       	ldd	r25, Y+58	; 0x3a
    12de:	01 97       	sbiw	r24, 0x01	; 1
    12e0:	f1 f7       	brne	.-4      	; 0x12de <main+0x62a>
    12e2:	9a af       	std	Y+58, r25	; 0x3a
    12e4:	89 af       	std	Y+57, r24	; 0x39
		{
			_delay_ms(30);
			if(!(PINB &(1<<PB3)))
    12e6:	e6 e3       	ldi	r30, 0x36	; 54
    12e8:	f0 e0       	ldi	r31, 0x00	; 0
    12ea:	80 81       	ld	r24, Z
    12ec:	88 2f       	mov	r24, r24
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	88 70       	andi	r24, 0x08	; 8
    12f2:	90 70       	andi	r25, 0x00	; 0
    12f4:	00 97       	sbiw	r24, 0x00	; 0
    12f6:	a1 f4       	brne	.+40     	; 0x1320 <main+0x66c>
			{
				if(flag==0)
    12f8:	80 91 6c 00 	lds	r24, 0x006C
    12fc:	88 23       	and	r24, r24
    12fe:	91 f4       	brne	.+36     	; 0x1324 <main+0x670>
				{
					flag=1;
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	80 93 6c 00 	sts	0x006C, r24
					min--;
    1306:	80 91 69 00 	lds	r24, 0x0069
    130a:	81 50       	subi	r24, 0x01	; 1
    130c:	80 93 69 00 	sts	0x0069, r24
					if(min>60)
    1310:	80 91 69 00 	lds	r24, 0x0069
    1314:	8d 33       	cpi	r24, 0x3D	; 61
    1316:	30 f0       	brcs	.+12     	; 0x1324 <main+0x670>
						min=59;
    1318:	8b e3       	ldi	r24, 0x3B	; 59
    131a:	80 93 69 00 	sts	0x0069, r24
    131e:	02 c0       	rjmp	.+4      	; 0x1324 <main+0x670>
				}
			}else flag=0;
    1320:	10 92 6c 00 	sts	0x006C, r1
		}

		// decrement seconds
		if(!(PINB &(1<<PB5)))
    1324:	e6 e3       	ldi	r30, 0x36	; 54
    1326:	f0 e0       	ldi	r31, 0x00	; 0
    1328:	80 81       	ld	r24, Z
    132a:	88 2f       	mov	r24, r24
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	80 72       	andi	r24, 0x20	; 32
    1330:	90 70       	andi	r25, 0x00	; 0
    1332:	00 97       	sbiw	r24, 0x00	; 0
    1334:	09 f0       	breq	.+2      	; 0x1338 <main+0x684>
    1336:	91 c0       	rjmp	.+290    	; 0x145a <main+0x7a6>
    1338:	80 e0       	ldi	r24, 0x00	; 0
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	a0 ef       	ldi	r26, 0xF0	; 240
    133e:	b1 e4       	ldi	r27, 0x41	; 65
    1340:	8d ab       	std	Y+53, r24	; 0x35
    1342:	9e ab       	std	Y+54, r25	; 0x36
    1344:	af ab       	std	Y+55, r26	; 0x37
    1346:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1348:	6d a9       	ldd	r22, Y+53	; 0x35
    134a:	7e a9       	ldd	r23, Y+54	; 0x36
    134c:	8f a9       	ldd	r24, Y+55	; 0x37
    134e:	98 ad       	ldd	r25, Y+56	; 0x38
    1350:	20 e0       	ldi	r18, 0x00	; 0
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	4a e7       	ldi	r20, 0x7A	; 122
    1356:	55 e4       	ldi	r21, 0x45	; 69
    1358:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    135c:	dc 01       	movw	r26, r24
    135e:	cb 01       	movw	r24, r22
    1360:	89 ab       	std	Y+49, r24	; 0x31
    1362:	9a ab       	std	Y+50, r25	; 0x32
    1364:	ab ab       	std	Y+51, r26	; 0x33
    1366:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1368:	69 a9       	ldd	r22, Y+49	; 0x31
    136a:	7a a9       	ldd	r23, Y+50	; 0x32
    136c:	8b a9       	ldd	r24, Y+51	; 0x33
    136e:	9c a9       	ldd	r25, Y+52	; 0x34
    1370:	20 e0       	ldi	r18, 0x00	; 0
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	40 e8       	ldi	r20, 0x80	; 128
    1376:	5f e3       	ldi	r21, 0x3F	; 63
    1378:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    137c:	88 23       	and	r24, r24
    137e:	2c f4       	brge	.+10     	; 0x138a <main+0x6d6>
		__ticks = 1;
    1380:	81 e0       	ldi	r24, 0x01	; 1
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	98 ab       	std	Y+48, r25	; 0x30
    1386:	8f a7       	std	Y+47, r24	; 0x2f
    1388:	3f c0       	rjmp	.+126    	; 0x1408 <main+0x754>
	else if (__tmp > 65535)
    138a:	69 a9       	ldd	r22, Y+49	; 0x31
    138c:	7a a9       	ldd	r23, Y+50	; 0x32
    138e:	8b a9       	ldd	r24, Y+51	; 0x33
    1390:	9c a9       	ldd	r25, Y+52	; 0x34
    1392:	20 e0       	ldi	r18, 0x00	; 0
    1394:	3f ef       	ldi	r19, 0xFF	; 255
    1396:	4f e7       	ldi	r20, 0x7F	; 127
    1398:	57 e4       	ldi	r21, 0x47	; 71
    139a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    139e:	18 16       	cp	r1, r24
    13a0:	4c f5       	brge	.+82     	; 0x13f4 <main+0x740>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13a2:	6d a9       	ldd	r22, Y+53	; 0x35
    13a4:	7e a9       	ldd	r23, Y+54	; 0x36
    13a6:	8f a9       	ldd	r24, Y+55	; 0x37
    13a8:	98 ad       	ldd	r25, Y+56	; 0x38
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	40 e2       	ldi	r20, 0x20	; 32
    13b0:	51 e4       	ldi	r21, 0x41	; 65
    13b2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13b6:	dc 01       	movw	r26, r24
    13b8:	cb 01       	movw	r24, r22
    13ba:	bc 01       	movw	r22, r24
    13bc:	cd 01       	movw	r24, r26
    13be:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13c2:	dc 01       	movw	r26, r24
    13c4:	cb 01       	movw	r24, r22
    13c6:	98 ab       	std	Y+48, r25	; 0x30
    13c8:	8f a7       	std	Y+47, r24	; 0x2f
    13ca:	0f c0       	rjmp	.+30     	; 0x13ea <main+0x736>
    13cc:	80 e9       	ldi	r24, 0x90	; 144
    13ce:	91 e0       	ldi	r25, 0x01	; 1
    13d0:	9e a7       	std	Y+46, r25	; 0x2e
    13d2:	8d a7       	std	Y+45, r24	; 0x2d
    13d4:	8d a5       	ldd	r24, Y+45	; 0x2d
    13d6:	9e a5       	ldd	r25, Y+46	; 0x2e
    13d8:	01 97       	sbiw	r24, 0x01	; 1
    13da:	f1 f7       	brne	.-4      	; 0x13d8 <main+0x724>
    13dc:	9e a7       	std	Y+46, r25	; 0x2e
    13de:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13e0:	8f a5       	ldd	r24, Y+47	; 0x2f
    13e2:	98 a9       	ldd	r25, Y+48	; 0x30
    13e4:	01 97       	sbiw	r24, 0x01	; 1
    13e6:	98 ab       	std	Y+48, r25	; 0x30
    13e8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13ea:	8f a5       	ldd	r24, Y+47	; 0x2f
    13ec:	98 a9       	ldd	r25, Y+48	; 0x30
    13ee:	00 97       	sbiw	r24, 0x00	; 0
    13f0:	69 f7       	brne	.-38     	; 0x13cc <main+0x718>
    13f2:	14 c0       	rjmp	.+40     	; 0x141c <main+0x768>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13f4:	69 a9       	ldd	r22, Y+49	; 0x31
    13f6:	7a a9       	ldd	r23, Y+50	; 0x32
    13f8:	8b a9       	ldd	r24, Y+51	; 0x33
    13fa:	9c a9       	ldd	r25, Y+52	; 0x34
    13fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1400:	dc 01       	movw	r26, r24
    1402:	cb 01       	movw	r24, r22
    1404:	98 ab       	std	Y+48, r25	; 0x30
    1406:	8f a7       	std	Y+47, r24	; 0x2f
    1408:	8f a5       	ldd	r24, Y+47	; 0x2f
    140a:	98 a9       	ldd	r25, Y+48	; 0x30
    140c:	9c a7       	std	Y+44, r25	; 0x2c
    140e:	8b a7       	std	Y+43, r24	; 0x2b
    1410:	8b a5       	ldd	r24, Y+43	; 0x2b
    1412:	9c a5       	ldd	r25, Y+44	; 0x2c
    1414:	01 97       	sbiw	r24, 0x01	; 1
    1416:	f1 f7       	brne	.-4      	; 0x1414 <main+0x760>
    1418:	9c a7       	std	Y+44, r25	; 0x2c
    141a:	8b a7       	std	Y+43, r24	; 0x2b
		{
			_delay_ms(30);
			if(!(PINB &(1<<PB5)))
    141c:	e6 e3       	ldi	r30, 0x36	; 54
    141e:	f0 e0       	ldi	r31, 0x00	; 0
    1420:	80 81       	ld	r24, Z
    1422:	88 2f       	mov	r24, r24
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	80 72       	andi	r24, 0x20	; 32
    1428:	90 70       	andi	r25, 0x00	; 0
    142a:	00 97       	sbiw	r24, 0x00	; 0
    142c:	a1 f4       	brne	.+40     	; 0x1456 <main+0x7a2>
			{
				if(flag==0)
    142e:	80 91 6c 00 	lds	r24, 0x006C
    1432:	88 23       	and	r24, r24
    1434:	91 f4       	brne	.+36     	; 0x145a <main+0x7a6>
				{
					flag=1;
    1436:	81 e0       	ldi	r24, 0x01	; 1
    1438:	80 93 6c 00 	sts	0x006C, r24
					sec--;
    143c:	80 91 68 00 	lds	r24, 0x0068
    1440:	81 50       	subi	r24, 0x01	; 1
    1442:	80 93 68 00 	sts	0x0068, r24
					if(sec>60)
    1446:	80 91 68 00 	lds	r24, 0x0068
    144a:	8d 33       	cpi	r24, 0x3D	; 61
    144c:	30 f0       	brcs	.+12     	; 0x145a <main+0x7a6>
						sec=59;
    144e:	8b e3       	ldi	r24, 0x3B	; 59
    1450:	80 93 68 00 	sts	0x0068, r24
    1454:	02 c0       	rjmp	.+4      	; 0x145a <main+0x7a6>
				}
			}else flag=0;
    1456:	10 92 6c 00 	sts	0x006C, r1
		}

		// increment hrs
		if(!(PINB &(1<<PB1)))
    145a:	e6 e3       	ldi	r30, 0x36	; 54
    145c:	f0 e0       	ldi	r31, 0x00	; 0
    145e:	80 81       	ld	r24, Z
    1460:	88 2f       	mov	r24, r24
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	82 70       	andi	r24, 0x02	; 2
    1466:	90 70       	andi	r25, 0x00	; 0
    1468:	00 97       	sbiw	r24, 0x00	; 0
    146a:	09 f0       	breq	.+2      	; 0x146e <main+0x7ba>
    146c:	90 c0       	rjmp	.+288    	; 0x158e <main+0x8da>
    146e:	80 e0       	ldi	r24, 0x00	; 0
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	a0 ef       	ldi	r26, 0xF0	; 240
    1474:	b1 e4       	ldi	r27, 0x41	; 65
    1476:	8f a3       	std	Y+39, r24	; 0x27
    1478:	98 a7       	std	Y+40, r25	; 0x28
    147a:	a9 a7       	std	Y+41, r26	; 0x29
    147c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    147e:	6f a1       	ldd	r22, Y+39	; 0x27
    1480:	78 a5       	ldd	r23, Y+40	; 0x28
    1482:	89 a5       	ldd	r24, Y+41	; 0x29
    1484:	9a a5       	ldd	r25, Y+42	; 0x2a
    1486:	20 e0       	ldi	r18, 0x00	; 0
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	4a e7       	ldi	r20, 0x7A	; 122
    148c:	55 e4       	ldi	r21, 0x45	; 69
    148e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1492:	dc 01       	movw	r26, r24
    1494:	cb 01       	movw	r24, r22
    1496:	8b a3       	std	Y+35, r24	; 0x23
    1498:	9c a3       	std	Y+36, r25	; 0x24
    149a:	ad a3       	std	Y+37, r26	; 0x25
    149c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    149e:	6b a1       	ldd	r22, Y+35	; 0x23
    14a0:	7c a1       	ldd	r23, Y+36	; 0x24
    14a2:	8d a1       	ldd	r24, Y+37	; 0x25
    14a4:	9e a1       	ldd	r25, Y+38	; 0x26
    14a6:	20 e0       	ldi	r18, 0x00	; 0
    14a8:	30 e0       	ldi	r19, 0x00	; 0
    14aa:	40 e8       	ldi	r20, 0x80	; 128
    14ac:	5f e3       	ldi	r21, 0x3F	; 63
    14ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    14b2:	88 23       	and	r24, r24
    14b4:	2c f4       	brge	.+10     	; 0x14c0 <main+0x80c>
		__ticks = 1;
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	9a a3       	std	Y+34, r25	; 0x22
    14bc:	89 a3       	std	Y+33, r24	; 0x21
    14be:	3f c0       	rjmp	.+126    	; 0x153e <main+0x88a>
	else if (__tmp > 65535)
    14c0:	6b a1       	ldd	r22, Y+35	; 0x23
    14c2:	7c a1       	ldd	r23, Y+36	; 0x24
    14c4:	8d a1       	ldd	r24, Y+37	; 0x25
    14c6:	9e a1       	ldd	r25, Y+38	; 0x26
    14c8:	20 e0       	ldi	r18, 0x00	; 0
    14ca:	3f ef       	ldi	r19, 0xFF	; 255
    14cc:	4f e7       	ldi	r20, 0x7F	; 127
    14ce:	57 e4       	ldi	r21, 0x47	; 71
    14d0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    14d4:	18 16       	cp	r1, r24
    14d6:	4c f5       	brge	.+82     	; 0x152a <main+0x876>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14d8:	6f a1       	ldd	r22, Y+39	; 0x27
    14da:	78 a5       	ldd	r23, Y+40	; 0x28
    14dc:	89 a5       	ldd	r24, Y+41	; 0x29
    14de:	9a a5       	ldd	r25, Y+42	; 0x2a
    14e0:	20 e0       	ldi	r18, 0x00	; 0
    14e2:	30 e0       	ldi	r19, 0x00	; 0
    14e4:	40 e2       	ldi	r20, 0x20	; 32
    14e6:	51 e4       	ldi	r21, 0x41	; 65
    14e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14ec:	dc 01       	movw	r26, r24
    14ee:	cb 01       	movw	r24, r22
    14f0:	bc 01       	movw	r22, r24
    14f2:	cd 01       	movw	r24, r26
    14f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14f8:	dc 01       	movw	r26, r24
    14fa:	cb 01       	movw	r24, r22
    14fc:	9a a3       	std	Y+34, r25	; 0x22
    14fe:	89 a3       	std	Y+33, r24	; 0x21
    1500:	0f c0       	rjmp	.+30     	; 0x1520 <main+0x86c>
    1502:	80 e9       	ldi	r24, 0x90	; 144
    1504:	91 e0       	ldi	r25, 0x01	; 1
    1506:	98 a3       	std	Y+32, r25	; 0x20
    1508:	8f 8f       	std	Y+31, r24	; 0x1f
    150a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    150c:	98 a1       	ldd	r25, Y+32	; 0x20
    150e:	01 97       	sbiw	r24, 0x01	; 1
    1510:	f1 f7       	brne	.-4      	; 0x150e <main+0x85a>
    1512:	98 a3       	std	Y+32, r25	; 0x20
    1514:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1516:	89 a1       	ldd	r24, Y+33	; 0x21
    1518:	9a a1       	ldd	r25, Y+34	; 0x22
    151a:	01 97       	sbiw	r24, 0x01	; 1
    151c:	9a a3       	std	Y+34, r25	; 0x22
    151e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1520:	89 a1       	ldd	r24, Y+33	; 0x21
    1522:	9a a1       	ldd	r25, Y+34	; 0x22
    1524:	00 97       	sbiw	r24, 0x00	; 0
    1526:	69 f7       	brne	.-38     	; 0x1502 <main+0x84e>
    1528:	14 c0       	rjmp	.+40     	; 0x1552 <main+0x89e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    152a:	6b a1       	ldd	r22, Y+35	; 0x23
    152c:	7c a1       	ldd	r23, Y+36	; 0x24
    152e:	8d a1       	ldd	r24, Y+37	; 0x25
    1530:	9e a1       	ldd	r25, Y+38	; 0x26
    1532:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1536:	dc 01       	movw	r26, r24
    1538:	cb 01       	movw	r24, r22
    153a:	9a a3       	std	Y+34, r25	; 0x22
    153c:	89 a3       	std	Y+33, r24	; 0x21
    153e:	89 a1       	ldd	r24, Y+33	; 0x21
    1540:	9a a1       	ldd	r25, Y+34	; 0x22
    1542:	9e 8f       	std	Y+30, r25	; 0x1e
    1544:	8d 8f       	std	Y+29, r24	; 0x1d
    1546:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1548:	9e 8d       	ldd	r25, Y+30	; 0x1e
    154a:	01 97       	sbiw	r24, 0x01	; 1
    154c:	f1 f7       	brne	.-4      	; 0x154a <main+0x896>
    154e:	9e 8f       	std	Y+30, r25	; 0x1e
    1550:	8d 8f       	std	Y+29, r24	; 0x1d
		{
			_delay_ms(30);
			if(!(PINB &(1<<PB1)))
    1552:	e6 e3       	ldi	r30, 0x36	; 54
    1554:	f0 e0       	ldi	r31, 0x00	; 0
    1556:	80 81       	ld	r24, Z
    1558:	88 2f       	mov	r24, r24
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	82 70       	andi	r24, 0x02	; 2
    155e:	90 70       	andi	r25, 0x00	; 0
    1560:	00 97       	sbiw	r24, 0x00	; 0
    1562:	99 f4       	brne	.+38     	; 0x158a <main+0x8d6>
			{
				if(flag==0)
    1564:	80 91 6c 00 	lds	r24, 0x006C
    1568:	88 23       	and	r24, r24
    156a:	89 f4       	brne	.+34     	; 0x158e <main+0x8da>
				{
					flag=1;
    156c:	81 e0       	ldi	r24, 0x01	; 1
    156e:	80 93 6c 00 	sts	0x006C, r24
					hrs++;
    1572:	80 91 6a 00 	lds	r24, 0x006A
    1576:	8f 5f       	subi	r24, 0xFF	; 255
    1578:	80 93 6a 00 	sts	0x006A, r24
					if(hrs==25)
    157c:	80 91 6a 00 	lds	r24, 0x006A
    1580:	89 31       	cpi	r24, 0x19	; 25
    1582:	29 f4       	brne	.+10     	; 0x158e <main+0x8da>
						hrs=0;
    1584:	10 92 6a 00 	sts	0x006A, r1
    1588:	02 c0       	rjmp	.+4      	; 0x158e <main+0x8da>
				}
			}else flag=0;
    158a:	10 92 6c 00 	sts	0x006C, r1
		}

		// increment mins
		if(!(PINB &(1<<PB4)))
    158e:	e6 e3       	ldi	r30, 0x36	; 54
    1590:	f0 e0       	ldi	r31, 0x00	; 0
    1592:	80 81       	ld	r24, Z
    1594:	88 2f       	mov	r24, r24
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	80 71       	andi	r24, 0x10	; 16
    159a:	90 70       	andi	r25, 0x00	; 0
    159c:	00 97       	sbiw	r24, 0x00	; 0
    159e:	09 f0       	breq	.+2      	; 0x15a2 <main+0x8ee>
    15a0:	90 c0       	rjmp	.+288    	; 0x16c2 <main+0xa0e>
    15a2:	80 e0       	ldi	r24, 0x00	; 0
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	a0 ef       	ldi	r26, 0xF0	; 240
    15a8:	b1 e4       	ldi	r27, 0x41	; 65
    15aa:	89 8f       	std	Y+25, r24	; 0x19
    15ac:	9a 8f       	std	Y+26, r25	; 0x1a
    15ae:	ab 8f       	std	Y+27, r26	; 0x1b
    15b0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15b2:	69 8d       	ldd	r22, Y+25	; 0x19
    15b4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15ba:	20 e0       	ldi	r18, 0x00	; 0
    15bc:	30 e0       	ldi	r19, 0x00	; 0
    15be:	4a e7       	ldi	r20, 0x7A	; 122
    15c0:	55 e4       	ldi	r21, 0x45	; 69
    15c2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15c6:	dc 01       	movw	r26, r24
    15c8:	cb 01       	movw	r24, r22
    15ca:	8d 8b       	std	Y+21, r24	; 0x15
    15cc:	9e 8b       	std	Y+22, r25	; 0x16
    15ce:	af 8b       	std	Y+23, r26	; 0x17
    15d0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    15d2:	6d 89       	ldd	r22, Y+21	; 0x15
    15d4:	7e 89       	ldd	r23, Y+22	; 0x16
    15d6:	8f 89       	ldd	r24, Y+23	; 0x17
    15d8:	98 8d       	ldd	r25, Y+24	; 0x18
    15da:	20 e0       	ldi	r18, 0x00	; 0
    15dc:	30 e0       	ldi	r19, 0x00	; 0
    15de:	40 e8       	ldi	r20, 0x80	; 128
    15e0:	5f e3       	ldi	r21, 0x3F	; 63
    15e2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    15e6:	88 23       	and	r24, r24
    15e8:	2c f4       	brge	.+10     	; 0x15f4 <main+0x940>
		__ticks = 1;
    15ea:	81 e0       	ldi	r24, 0x01	; 1
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	9c 8b       	std	Y+20, r25	; 0x14
    15f0:	8b 8b       	std	Y+19, r24	; 0x13
    15f2:	3f c0       	rjmp	.+126    	; 0x1672 <main+0x9be>
	else if (__tmp > 65535)
    15f4:	6d 89       	ldd	r22, Y+21	; 0x15
    15f6:	7e 89       	ldd	r23, Y+22	; 0x16
    15f8:	8f 89       	ldd	r24, Y+23	; 0x17
    15fa:	98 8d       	ldd	r25, Y+24	; 0x18
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	3f ef       	ldi	r19, 0xFF	; 255
    1600:	4f e7       	ldi	r20, 0x7F	; 127
    1602:	57 e4       	ldi	r21, 0x47	; 71
    1604:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1608:	18 16       	cp	r1, r24
    160a:	4c f5       	brge	.+82     	; 0x165e <main+0x9aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    160c:	69 8d       	ldd	r22, Y+25	; 0x19
    160e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1610:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1612:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	40 e2       	ldi	r20, 0x20	; 32
    161a:	51 e4       	ldi	r21, 0x41	; 65
    161c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1620:	dc 01       	movw	r26, r24
    1622:	cb 01       	movw	r24, r22
    1624:	bc 01       	movw	r22, r24
    1626:	cd 01       	movw	r24, r26
    1628:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    162c:	dc 01       	movw	r26, r24
    162e:	cb 01       	movw	r24, r22
    1630:	9c 8b       	std	Y+20, r25	; 0x14
    1632:	8b 8b       	std	Y+19, r24	; 0x13
    1634:	0f c0       	rjmp	.+30     	; 0x1654 <main+0x9a0>
    1636:	80 e9       	ldi	r24, 0x90	; 144
    1638:	91 e0       	ldi	r25, 0x01	; 1
    163a:	9a 8b       	std	Y+18, r25	; 0x12
    163c:	89 8b       	std	Y+17, r24	; 0x11
    163e:	89 89       	ldd	r24, Y+17	; 0x11
    1640:	9a 89       	ldd	r25, Y+18	; 0x12
    1642:	01 97       	sbiw	r24, 0x01	; 1
    1644:	f1 f7       	brne	.-4      	; 0x1642 <main+0x98e>
    1646:	9a 8b       	std	Y+18, r25	; 0x12
    1648:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    164a:	8b 89       	ldd	r24, Y+19	; 0x13
    164c:	9c 89       	ldd	r25, Y+20	; 0x14
    164e:	01 97       	sbiw	r24, 0x01	; 1
    1650:	9c 8b       	std	Y+20, r25	; 0x14
    1652:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1654:	8b 89       	ldd	r24, Y+19	; 0x13
    1656:	9c 89       	ldd	r25, Y+20	; 0x14
    1658:	00 97       	sbiw	r24, 0x00	; 0
    165a:	69 f7       	brne	.-38     	; 0x1636 <main+0x982>
    165c:	14 c0       	rjmp	.+40     	; 0x1686 <main+0x9d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    165e:	6d 89       	ldd	r22, Y+21	; 0x15
    1660:	7e 89       	ldd	r23, Y+22	; 0x16
    1662:	8f 89       	ldd	r24, Y+23	; 0x17
    1664:	98 8d       	ldd	r25, Y+24	; 0x18
    1666:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    166a:	dc 01       	movw	r26, r24
    166c:	cb 01       	movw	r24, r22
    166e:	9c 8b       	std	Y+20, r25	; 0x14
    1670:	8b 8b       	std	Y+19, r24	; 0x13
    1672:	8b 89       	ldd	r24, Y+19	; 0x13
    1674:	9c 89       	ldd	r25, Y+20	; 0x14
    1676:	98 8b       	std	Y+16, r25	; 0x10
    1678:	8f 87       	std	Y+15, r24	; 0x0f
    167a:	8f 85       	ldd	r24, Y+15	; 0x0f
    167c:	98 89       	ldd	r25, Y+16	; 0x10
    167e:	01 97       	sbiw	r24, 0x01	; 1
    1680:	f1 f7       	brne	.-4      	; 0x167e <main+0x9ca>
    1682:	98 8b       	std	Y+16, r25	; 0x10
    1684:	8f 87       	std	Y+15, r24	; 0x0f
		{
			_delay_ms(30);
			if(!(PINB &(1<<PB4)))
    1686:	e6 e3       	ldi	r30, 0x36	; 54
    1688:	f0 e0       	ldi	r31, 0x00	; 0
    168a:	80 81       	ld	r24, Z
    168c:	88 2f       	mov	r24, r24
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	80 71       	andi	r24, 0x10	; 16
    1692:	90 70       	andi	r25, 0x00	; 0
    1694:	00 97       	sbiw	r24, 0x00	; 0
    1696:	99 f4       	brne	.+38     	; 0x16be <main+0xa0a>
			{
				if(flag==0)
    1698:	80 91 6c 00 	lds	r24, 0x006C
    169c:	88 23       	and	r24, r24
    169e:	89 f4       	brne	.+34     	; 0x16c2 <main+0xa0e>
				{
					flag=1;
    16a0:	81 e0       	ldi	r24, 0x01	; 1
    16a2:	80 93 6c 00 	sts	0x006C, r24
					min++;
    16a6:	80 91 69 00 	lds	r24, 0x0069
    16aa:	8f 5f       	subi	r24, 0xFF	; 255
    16ac:	80 93 69 00 	sts	0x0069, r24
					if(min==60)
    16b0:	80 91 69 00 	lds	r24, 0x0069
    16b4:	8c 33       	cpi	r24, 0x3C	; 60
    16b6:	29 f4       	brne	.+10     	; 0x16c2 <main+0xa0e>
						min=0;
    16b8:	10 92 69 00 	sts	0x0069, r1
    16bc:	02 c0       	rjmp	.+4      	; 0x16c2 <main+0xa0e>
				}
			}else flag=0;
    16be:	10 92 6c 00 	sts	0x006C, r1
		}

		// increment sec
		if(!(PINB &(1<<PB6)))
    16c2:	e6 e3       	ldi	r30, 0x36	; 54
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	80 81       	ld	r24, Z
    16c8:	88 2f       	mov	r24, r24
    16ca:	90 e0       	ldi	r25, 0x00	; 0
    16cc:	80 74       	andi	r24, 0x40	; 64
    16ce:	90 70       	andi	r25, 0x00	; 0
    16d0:	00 97       	sbiw	r24, 0x00	; 0
    16d2:	09 f0       	breq	.+2      	; 0x16d6 <main+0xa22>
    16d4:	35 cb       	rjmp	.-2454   	; 0xd40 <main+0x8c>
    16d6:	80 e0       	ldi	r24, 0x00	; 0
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	a0 ef       	ldi	r26, 0xF0	; 240
    16dc:	b1 e4       	ldi	r27, 0x41	; 65
    16de:	8b 87       	std	Y+11, r24	; 0x0b
    16e0:	9c 87       	std	Y+12, r25	; 0x0c
    16e2:	ad 87       	std	Y+13, r26	; 0x0d
    16e4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16e6:	6b 85       	ldd	r22, Y+11	; 0x0b
    16e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    16ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    16ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    16ee:	20 e0       	ldi	r18, 0x00	; 0
    16f0:	30 e0       	ldi	r19, 0x00	; 0
    16f2:	4a e7       	ldi	r20, 0x7A	; 122
    16f4:	55 e4       	ldi	r21, 0x45	; 69
    16f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16fa:	dc 01       	movw	r26, r24
    16fc:	cb 01       	movw	r24, r22
    16fe:	8f 83       	std	Y+7, r24	; 0x07
    1700:	98 87       	std	Y+8, r25	; 0x08
    1702:	a9 87       	std	Y+9, r26	; 0x09
    1704:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1706:	6f 81       	ldd	r22, Y+7	; 0x07
    1708:	78 85       	ldd	r23, Y+8	; 0x08
    170a:	89 85       	ldd	r24, Y+9	; 0x09
    170c:	9a 85       	ldd	r25, Y+10	; 0x0a
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	40 e8       	ldi	r20, 0x80	; 128
    1714:	5f e3       	ldi	r21, 0x3F	; 63
    1716:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    171a:	88 23       	and	r24, r24
    171c:	2c f4       	brge	.+10     	; 0x1728 <main+0xa74>
		__ticks = 1;
    171e:	81 e0       	ldi	r24, 0x01	; 1
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	9e 83       	std	Y+6, r25	; 0x06
    1724:	8d 83       	std	Y+5, r24	; 0x05
    1726:	3f c0       	rjmp	.+126    	; 0x17a6 <main+0xaf2>
	else if (__tmp > 65535)
    1728:	6f 81       	ldd	r22, Y+7	; 0x07
    172a:	78 85       	ldd	r23, Y+8	; 0x08
    172c:	89 85       	ldd	r24, Y+9	; 0x09
    172e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1730:	20 e0       	ldi	r18, 0x00	; 0
    1732:	3f ef       	ldi	r19, 0xFF	; 255
    1734:	4f e7       	ldi	r20, 0x7F	; 127
    1736:	57 e4       	ldi	r21, 0x47	; 71
    1738:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    173c:	18 16       	cp	r1, r24
    173e:	4c f5       	brge	.+82     	; 0x1792 <main+0xade>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1740:	6b 85       	ldd	r22, Y+11	; 0x0b
    1742:	7c 85       	ldd	r23, Y+12	; 0x0c
    1744:	8d 85       	ldd	r24, Y+13	; 0x0d
    1746:	9e 85       	ldd	r25, Y+14	; 0x0e
    1748:	20 e0       	ldi	r18, 0x00	; 0
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	40 e2       	ldi	r20, 0x20	; 32
    174e:	51 e4       	ldi	r21, 0x41	; 65
    1750:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1754:	dc 01       	movw	r26, r24
    1756:	cb 01       	movw	r24, r22
    1758:	bc 01       	movw	r22, r24
    175a:	cd 01       	movw	r24, r26
    175c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1760:	dc 01       	movw	r26, r24
    1762:	cb 01       	movw	r24, r22
    1764:	9e 83       	std	Y+6, r25	; 0x06
    1766:	8d 83       	std	Y+5, r24	; 0x05
    1768:	0f c0       	rjmp	.+30     	; 0x1788 <main+0xad4>
    176a:	80 e9       	ldi	r24, 0x90	; 144
    176c:	91 e0       	ldi	r25, 0x01	; 1
    176e:	9c 83       	std	Y+4, r25	; 0x04
    1770:	8b 83       	std	Y+3, r24	; 0x03
    1772:	8b 81       	ldd	r24, Y+3	; 0x03
    1774:	9c 81       	ldd	r25, Y+4	; 0x04
    1776:	01 97       	sbiw	r24, 0x01	; 1
    1778:	f1 f7       	brne	.-4      	; 0x1776 <main+0xac2>
    177a:	9c 83       	std	Y+4, r25	; 0x04
    177c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    177e:	8d 81       	ldd	r24, Y+5	; 0x05
    1780:	9e 81       	ldd	r25, Y+6	; 0x06
    1782:	01 97       	sbiw	r24, 0x01	; 1
    1784:	9e 83       	std	Y+6, r25	; 0x06
    1786:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1788:	8d 81       	ldd	r24, Y+5	; 0x05
    178a:	9e 81       	ldd	r25, Y+6	; 0x06
    178c:	00 97       	sbiw	r24, 0x00	; 0
    178e:	69 f7       	brne	.-38     	; 0x176a <main+0xab6>
    1790:	14 c0       	rjmp	.+40     	; 0x17ba <main+0xb06>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1792:	6f 81       	ldd	r22, Y+7	; 0x07
    1794:	78 85       	ldd	r23, Y+8	; 0x08
    1796:	89 85       	ldd	r24, Y+9	; 0x09
    1798:	9a 85       	ldd	r25, Y+10	; 0x0a
    179a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    179e:	dc 01       	movw	r26, r24
    17a0:	cb 01       	movw	r24, r22
    17a2:	9e 83       	std	Y+6, r25	; 0x06
    17a4:	8d 83       	std	Y+5, r24	; 0x05
    17a6:	8d 81       	ldd	r24, Y+5	; 0x05
    17a8:	9e 81       	ldd	r25, Y+6	; 0x06
    17aa:	9a 83       	std	Y+2, r25	; 0x02
    17ac:	89 83       	std	Y+1, r24	; 0x01
    17ae:	89 81       	ldd	r24, Y+1	; 0x01
    17b0:	9a 81       	ldd	r25, Y+2	; 0x02
    17b2:	01 97       	sbiw	r24, 0x01	; 1
    17b4:	f1 f7       	brne	.-4      	; 0x17b2 <main+0xafe>
    17b6:	9a 83       	std	Y+2, r25	; 0x02
    17b8:	89 83       	std	Y+1, r24	; 0x01
		{
			_delay_ms(30);
			if(!(PINB &(1<<PB6)))
    17ba:	e6 e3       	ldi	r30, 0x36	; 54
    17bc:	f0 e0       	ldi	r31, 0x00	; 0
    17be:	80 81       	ld	r24, Z
    17c0:	88 2f       	mov	r24, r24
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	80 74       	andi	r24, 0x40	; 64
    17c6:	90 70       	andi	r25, 0x00	; 0
    17c8:	00 97       	sbiw	r24, 0x00	; 0
    17ca:	a9 f4       	brne	.+42     	; 0x17f6 <main+0xb42>
			{
				if(flag==0)
    17cc:	80 91 6c 00 	lds	r24, 0x006C
    17d0:	88 23       	and	r24, r24
    17d2:	09 f0       	breq	.+2      	; 0x17d6 <main+0xb22>
    17d4:	b5 ca       	rjmp	.-2710   	; 0xd40 <main+0x8c>
				{
					flag=1;
    17d6:	81 e0       	ldi	r24, 0x01	; 1
    17d8:	80 93 6c 00 	sts	0x006C, r24
					sec++;
    17dc:	80 91 68 00 	lds	r24, 0x0068
    17e0:	8f 5f       	subi	r24, 0xFF	; 255
    17e2:	80 93 68 00 	sts	0x0068, r24
					if(sec==60)
    17e6:	80 91 68 00 	lds	r24, 0x0068
    17ea:	8c 33       	cpi	r24, 0x3C	; 60
    17ec:	09 f0       	breq	.+2      	; 0x17f0 <main+0xb3c>
    17ee:	a8 ca       	rjmp	.-2736   	; 0xd40 <main+0x8c>
						sec=0;
    17f0:	10 92 68 00 	sts	0x0068, r1
    17f4:	a5 ca       	rjmp	.-2742   	; 0xd40 <main+0x8c>
				}
			}else flag=0;
    17f6:	10 92 6c 00 	sts	0x006C, r1
    17fa:	a2 ca       	rjmp	.-2748   	; 0xd40 <main+0x8c>

000017fc <Timer1_Init>:
		}
	}//while brace
}
void Timer1_Init(void){
    17fc:	df 93       	push	r29
    17fe:	cf 93       	push	r28
    1800:	cd b7       	in	r28, 0x3d	; 61
    1802:	de b7       	in	r29, 0x3e	; 62
	TCCR1A =(1<<FOC1A );
    1804:	ef e4       	ldi	r30, 0x4F	; 79
    1806:	f0 e0       	ldi	r31, 0x00	; 0
    1808:	88 e0       	ldi	r24, 0x08	; 8
    180a:	80 83       	st	Z, r24
	TCCR1B = (1<<WGM12) | (1<<CS12) |(1<<CS10);
    180c:	ee e4       	ldi	r30, 0x4E	; 78
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	8d e0       	ldi	r24, 0x0D	; 13
    1812:	80 83       	st	Z, r24
	TCCR1B &=~(1<<CS11);
    1814:	ae e4       	ldi	r26, 0x4E	; 78
    1816:	b0 e0       	ldi	r27, 0x00	; 0
    1818:	ee e4       	ldi	r30, 0x4E	; 78
    181a:	f0 e0       	ldi	r31, 0x00	; 0
    181c:	80 81       	ld	r24, Z
    181e:	8d 7f       	andi	r24, 0xFD	; 253
    1820:	8c 93       	st	X, r24
	TCNT1=0;
    1822:	ec e4       	ldi	r30, 0x4C	; 76
    1824:	f0 e0       	ldi	r31, 0x00	; 0
    1826:	11 82       	std	Z+1, r1	; 0x01
    1828:	10 82       	st	Z, r1
	OCR1A=15625;
    182a:	ea e4       	ldi	r30, 0x4A	; 74
    182c:	f0 e0       	ldi	r31, 0x00	; 0
    182e:	89 e0       	ldi	r24, 0x09	; 9
    1830:	9d e3       	ldi	r25, 0x3D	; 61
    1832:	91 83       	std	Z+1, r25	; 0x01
    1834:	80 83       	st	Z, r24
	TIMSK|=(1<<OCIE1A);
    1836:	a9 e5       	ldi	r26, 0x59	; 89
    1838:	b0 e0       	ldi	r27, 0x00	; 0
    183a:	e9 e5       	ldi	r30, 0x59	; 89
    183c:	f0 e0       	ldi	r31, 0x00	; 0
    183e:	80 81       	ld	r24, Z
    1840:	80 61       	ori	r24, 0x10	; 16
    1842:	8c 93       	st	X, r24
}
    1844:	cf 91       	pop	r28
    1846:	df 91       	pop	r29
    1848:	08 95       	ret

0000184a <INT_Init>:
void INT_Init(void){
    184a:	df 93       	push	r29
    184c:	cf 93       	push	r28
    184e:	cd b7       	in	r28, 0x3d	; 61
    1850:	de b7       	in	r29, 0x3e	; 62
	MCUCR|=(1<<ISC01) |(1<<ISC11)|(1<<ISC10);
    1852:	a5 e5       	ldi	r26, 0x55	; 85
    1854:	b0 e0       	ldi	r27, 0x00	; 0
    1856:	e5 e5       	ldi	r30, 0x55	; 85
    1858:	f0 e0       	ldi	r31, 0x00	; 0
    185a:	80 81       	ld	r24, Z
    185c:	8e 60       	ori	r24, 0x0E	; 14
    185e:	8c 93       	st	X, r24
	MCUCSR &=~(1<<ISC2);
    1860:	a4 e5       	ldi	r26, 0x54	; 84
    1862:	b0 e0       	ldi	r27, 0x00	; 0
    1864:	e4 e5       	ldi	r30, 0x54	; 84
    1866:	f0 e0       	ldi	r31, 0x00	; 0
    1868:	80 81       	ld	r24, Z
    186a:	8f 7b       	andi	r24, 0xBF	; 191
    186c:	8c 93       	st	X, r24
	GICR |=(1<<INT0) |(1<<INT1) |(1<<INT2);
    186e:	ab e5       	ldi	r26, 0x5B	; 91
    1870:	b0 e0       	ldi	r27, 0x00	; 0
    1872:	eb e5       	ldi	r30, 0x5B	; 91
    1874:	f0 e0       	ldi	r31, 0x00	; 0
    1876:	80 81       	ld	r24, Z
    1878:	80 6e       	ori	r24, 0xE0	; 224
    187a:	8c 93       	st	X, r24
}
    187c:	cf 91       	pop	r28
    187e:	df 91       	pop	r29
    1880:	08 95       	ret

00001882 <Display_Time>:
void Display_Time(void){
    1882:	0f 93       	push	r16
    1884:	1f 93       	push	r17
    1886:	df 93       	push	r29
    1888:	cf 93       	push	r28
    188a:	cd b7       	in	r28, 0x3d	; 61
    188c:	de b7       	in	r29, 0x3e	; 62
    188e:	ca 55       	subi	r28, 0x5A	; 90
    1890:	d0 40       	sbci	r29, 0x00	; 0
    1892:	0f b6       	in	r0, 0x3f	; 63
    1894:	f8 94       	cli
    1896:	de bf       	out	0x3e, r29	; 62
    1898:	0f be       	out	0x3f, r0	; 63
    189a:	cd bf       	out	0x3d, r28	; 61
	PORTA|=(1<<PA0);
    189c:	ab e3       	ldi	r26, 0x3B	; 59
    189e:	b0 e0       	ldi	r27, 0x00	; 0
    18a0:	eb e3       	ldi	r30, 0x3B	; 59
    18a2:	f0 e0       	ldi	r31, 0x00	; 0
    18a4:	80 81       	ld	r24, Z
    18a6:	81 60       	ori	r24, 0x01	; 1
    18a8:	8c 93       	st	X, r24
	PORTC=(PORTC&0)|(sec%10);
    18aa:	e5 e3       	ldi	r30, 0x35	; 53
    18ac:	f0 e0       	ldi	r31, 0x00	; 0
    18ae:	80 81       	ld	r24, Z
    18b0:	e5 e3       	ldi	r30, 0x35	; 53
    18b2:	f0 e0       	ldi	r31, 0x00	; 0
    18b4:	80 91 68 00 	lds	r24, 0x0068
    18b8:	9a e0       	ldi	r25, 0x0A	; 10
    18ba:	69 2f       	mov	r22, r25
    18bc:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__udivmodqi4>
    18c0:	89 2f       	mov	r24, r25
    18c2:	80 83       	st	Z, r24
    18c4:	fe 01       	movw	r30, r28
    18c6:	ef 5a       	subi	r30, 0xAF	; 175
    18c8:	ff 4f       	sbci	r31, 0xFF	; 255
    18ca:	80 e0       	ldi	r24, 0x00	; 0
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	a0 e0       	ldi	r26, 0x00	; 0
    18d0:	b0 e4       	ldi	r27, 0x40	; 64
    18d2:	80 83       	st	Z, r24
    18d4:	91 83       	std	Z+1, r25	; 0x01
    18d6:	a2 83       	std	Z+2, r26	; 0x02
    18d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18da:	8e 01       	movw	r16, r28
    18dc:	03 5b       	subi	r16, 0xB3	; 179
    18de:	1f 4f       	sbci	r17, 0xFF	; 255
    18e0:	fe 01       	movw	r30, r28
    18e2:	ef 5a       	subi	r30, 0xAF	; 175
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	20 e0       	ldi	r18, 0x00	; 0
    18f0:	30 e0       	ldi	r19, 0x00	; 0
    18f2:	4a e7       	ldi	r20, 0x7A	; 122
    18f4:	55 e4       	ldi	r21, 0x45	; 69
    18f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18fa:	dc 01       	movw	r26, r24
    18fc:	cb 01       	movw	r24, r22
    18fe:	f8 01       	movw	r30, r16
    1900:	80 83       	st	Z, r24
    1902:	91 83       	std	Z+1, r25	; 0x01
    1904:	a2 83       	std	Z+2, r26	; 0x02
    1906:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1908:	fe 01       	movw	r30, r28
    190a:	e3 5b       	subi	r30, 0xB3	; 179
    190c:	ff 4f       	sbci	r31, 0xFF	; 255
    190e:	60 81       	ld	r22, Z
    1910:	71 81       	ldd	r23, Z+1	; 0x01
    1912:	82 81       	ldd	r24, Z+2	; 0x02
    1914:	93 81       	ldd	r25, Z+3	; 0x03
    1916:	20 e0       	ldi	r18, 0x00	; 0
    1918:	30 e0       	ldi	r19, 0x00	; 0
    191a:	40 e8       	ldi	r20, 0x80	; 128
    191c:	5f e3       	ldi	r21, 0x3F	; 63
    191e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1922:	88 23       	and	r24, r24
    1924:	44 f4       	brge	.+16     	; 0x1936 <Display_Time+0xb4>
		__ticks = 1;
    1926:	fe 01       	movw	r30, r28
    1928:	e5 5b       	subi	r30, 0xB5	; 181
    192a:	ff 4f       	sbci	r31, 0xFF	; 255
    192c:	81 e0       	ldi	r24, 0x01	; 1
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	91 83       	std	Z+1, r25	; 0x01
    1932:	80 83       	st	Z, r24
    1934:	64 c0       	rjmp	.+200    	; 0x19fe <Display_Time+0x17c>
	else if (__tmp > 65535)
    1936:	fe 01       	movw	r30, r28
    1938:	e3 5b       	subi	r30, 0xB3	; 179
    193a:	ff 4f       	sbci	r31, 0xFF	; 255
    193c:	60 81       	ld	r22, Z
    193e:	71 81       	ldd	r23, Z+1	; 0x01
    1940:	82 81       	ldd	r24, Z+2	; 0x02
    1942:	93 81       	ldd	r25, Z+3	; 0x03
    1944:	20 e0       	ldi	r18, 0x00	; 0
    1946:	3f ef       	ldi	r19, 0xFF	; 255
    1948:	4f e7       	ldi	r20, 0x7F	; 127
    194a:	57 e4       	ldi	r21, 0x47	; 71
    194c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1950:	18 16       	cp	r1, r24
    1952:	0c f0       	brlt	.+2      	; 0x1956 <Display_Time+0xd4>
    1954:	43 c0       	rjmp	.+134    	; 0x19dc <Display_Time+0x15a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1956:	fe 01       	movw	r30, r28
    1958:	ef 5a       	subi	r30, 0xAF	; 175
    195a:	ff 4f       	sbci	r31, 0xFF	; 255
    195c:	60 81       	ld	r22, Z
    195e:	71 81       	ldd	r23, Z+1	; 0x01
    1960:	82 81       	ldd	r24, Z+2	; 0x02
    1962:	93 81       	ldd	r25, Z+3	; 0x03
    1964:	20 e0       	ldi	r18, 0x00	; 0
    1966:	30 e0       	ldi	r19, 0x00	; 0
    1968:	40 e2       	ldi	r20, 0x20	; 32
    196a:	51 e4       	ldi	r21, 0x41	; 65
    196c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1970:	dc 01       	movw	r26, r24
    1972:	cb 01       	movw	r24, r22
    1974:	8e 01       	movw	r16, r28
    1976:	05 5b       	subi	r16, 0xB5	; 181
    1978:	1f 4f       	sbci	r17, 0xFF	; 255
    197a:	bc 01       	movw	r22, r24
    197c:	cd 01       	movw	r24, r26
    197e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1982:	dc 01       	movw	r26, r24
    1984:	cb 01       	movw	r24, r22
    1986:	f8 01       	movw	r30, r16
    1988:	91 83       	std	Z+1, r25	; 0x01
    198a:	80 83       	st	Z, r24
    198c:	1f c0       	rjmp	.+62     	; 0x19cc <Display_Time+0x14a>
    198e:	fe 01       	movw	r30, r28
    1990:	e7 5b       	subi	r30, 0xB7	; 183
    1992:	ff 4f       	sbci	r31, 0xFF	; 255
    1994:	80 e9       	ldi	r24, 0x90	; 144
    1996:	91 e0       	ldi	r25, 0x01	; 1
    1998:	91 83       	std	Z+1, r25	; 0x01
    199a:	80 83       	st	Z, r24
    199c:	fe 01       	movw	r30, r28
    199e:	e7 5b       	subi	r30, 0xB7	; 183
    19a0:	ff 4f       	sbci	r31, 0xFF	; 255
    19a2:	80 81       	ld	r24, Z
    19a4:	91 81       	ldd	r25, Z+1	; 0x01
    19a6:	01 97       	sbiw	r24, 0x01	; 1
    19a8:	f1 f7       	brne	.-4      	; 0x19a6 <Display_Time+0x124>
    19aa:	fe 01       	movw	r30, r28
    19ac:	e7 5b       	subi	r30, 0xB7	; 183
    19ae:	ff 4f       	sbci	r31, 0xFF	; 255
    19b0:	91 83       	std	Z+1, r25	; 0x01
    19b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19b4:	de 01       	movw	r26, r28
    19b6:	a5 5b       	subi	r26, 0xB5	; 181
    19b8:	bf 4f       	sbci	r27, 0xFF	; 255
    19ba:	fe 01       	movw	r30, r28
    19bc:	e5 5b       	subi	r30, 0xB5	; 181
    19be:	ff 4f       	sbci	r31, 0xFF	; 255
    19c0:	80 81       	ld	r24, Z
    19c2:	91 81       	ldd	r25, Z+1	; 0x01
    19c4:	01 97       	sbiw	r24, 0x01	; 1
    19c6:	11 96       	adiw	r26, 0x01	; 1
    19c8:	9c 93       	st	X, r25
    19ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19cc:	fe 01       	movw	r30, r28
    19ce:	e5 5b       	subi	r30, 0xB5	; 181
    19d0:	ff 4f       	sbci	r31, 0xFF	; 255
    19d2:	80 81       	ld	r24, Z
    19d4:	91 81       	ldd	r25, Z+1	; 0x01
    19d6:	00 97       	sbiw	r24, 0x00	; 0
    19d8:	d1 f6       	brne	.-76     	; 0x198e <Display_Time+0x10c>
    19da:	27 c0       	rjmp	.+78     	; 0x1a2a <Display_Time+0x1a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19dc:	8e 01       	movw	r16, r28
    19de:	05 5b       	subi	r16, 0xB5	; 181
    19e0:	1f 4f       	sbci	r17, 0xFF	; 255
    19e2:	fe 01       	movw	r30, r28
    19e4:	e3 5b       	subi	r30, 0xB3	; 179
    19e6:	ff 4f       	sbci	r31, 0xFF	; 255
    19e8:	60 81       	ld	r22, Z
    19ea:	71 81       	ldd	r23, Z+1	; 0x01
    19ec:	82 81       	ldd	r24, Z+2	; 0x02
    19ee:	93 81       	ldd	r25, Z+3	; 0x03
    19f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19f4:	dc 01       	movw	r26, r24
    19f6:	cb 01       	movw	r24, r22
    19f8:	f8 01       	movw	r30, r16
    19fa:	91 83       	std	Z+1, r25	; 0x01
    19fc:	80 83       	st	Z, r24
    19fe:	de 01       	movw	r26, r28
    1a00:	a9 5b       	subi	r26, 0xB9	; 185
    1a02:	bf 4f       	sbci	r27, 0xFF	; 255
    1a04:	fe 01       	movw	r30, r28
    1a06:	e5 5b       	subi	r30, 0xB5	; 181
    1a08:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0a:	80 81       	ld	r24, Z
    1a0c:	91 81       	ldd	r25, Z+1	; 0x01
    1a0e:	8d 93       	st	X+, r24
    1a10:	9c 93       	st	X, r25
    1a12:	fe 01       	movw	r30, r28
    1a14:	e9 5b       	subi	r30, 0xB9	; 185
    1a16:	ff 4f       	sbci	r31, 0xFF	; 255
    1a18:	80 81       	ld	r24, Z
    1a1a:	91 81       	ldd	r25, Z+1	; 0x01
    1a1c:	01 97       	sbiw	r24, 0x01	; 1
    1a1e:	f1 f7       	brne	.-4      	; 0x1a1c <Display_Time+0x19a>
    1a20:	fe 01       	movw	r30, r28
    1a22:	e9 5b       	subi	r30, 0xB9	; 185
    1a24:	ff 4f       	sbci	r31, 0xFF	; 255
    1a26:	91 83       	std	Z+1, r25	; 0x01
    1a28:	80 83       	st	Z, r24
	_delay_ms(2);
	PORTA&=~(1<<PA0);
    1a2a:	ab e3       	ldi	r26, 0x3B	; 59
    1a2c:	b0 e0       	ldi	r27, 0x00	; 0
    1a2e:	eb e3       	ldi	r30, 0x3B	; 59
    1a30:	f0 e0       	ldi	r31, 0x00	; 0
    1a32:	80 81       	ld	r24, Z
    1a34:	8e 7f       	andi	r24, 0xFE	; 254
    1a36:	8c 93       	st	X, r24

	PORTA|=(1<<PA1);
    1a38:	ab e3       	ldi	r26, 0x3B	; 59
    1a3a:	b0 e0       	ldi	r27, 0x00	; 0
    1a3c:	eb e3       	ldi	r30, 0x3B	; 59
    1a3e:	f0 e0       	ldi	r31, 0x00	; 0
    1a40:	80 81       	ld	r24, Z
    1a42:	82 60       	ori	r24, 0x02	; 2
    1a44:	8c 93       	st	X, r24
	PORTC=(PORTC&0)|(sec/10);
    1a46:	e5 e3       	ldi	r30, 0x35	; 53
    1a48:	f0 e0       	ldi	r31, 0x00	; 0
    1a4a:	80 81       	ld	r24, Z
    1a4c:	e5 e3       	ldi	r30, 0x35	; 53
    1a4e:	f0 e0       	ldi	r31, 0x00	; 0
    1a50:	80 91 68 00 	lds	r24, 0x0068
    1a54:	9a e0       	ldi	r25, 0x0A	; 10
    1a56:	69 2f       	mov	r22, r25
    1a58:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__udivmodqi4>
    1a5c:	80 83       	st	Z, r24
    1a5e:	fe 01       	movw	r30, r28
    1a60:	ed 5b       	subi	r30, 0xBD	; 189
    1a62:	ff 4f       	sbci	r31, 0xFF	; 255
    1a64:	80 e0       	ldi	r24, 0x00	; 0
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	a0 e0       	ldi	r26, 0x00	; 0
    1a6a:	b0 e4       	ldi	r27, 0x40	; 64
    1a6c:	80 83       	st	Z, r24
    1a6e:	91 83       	std	Z+1, r25	; 0x01
    1a70:	a2 83       	std	Z+2, r26	; 0x02
    1a72:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a74:	8e 01       	movw	r16, r28
    1a76:	01 5c       	subi	r16, 0xC1	; 193
    1a78:	1f 4f       	sbci	r17, 0xFF	; 255
    1a7a:	fe 01       	movw	r30, r28
    1a7c:	ed 5b       	subi	r30, 0xBD	; 189
    1a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a80:	60 81       	ld	r22, Z
    1a82:	71 81       	ldd	r23, Z+1	; 0x01
    1a84:	82 81       	ldd	r24, Z+2	; 0x02
    1a86:	93 81       	ldd	r25, Z+3	; 0x03
    1a88:	20 e0       	ldi	r18, 0x00	; 0
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	4a e7       	ldi	r20, 0x7A	; 122
    1a8e:	55 e4       	ldi	r21, 0x45	; 69
    1a90:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a94:	dc 01       	movw	r26, r24
    1a96:	cb 01       	movw	r24, r22
    1a98:	f8 01       	movw	r30, r16
    1a9a:	80 83       	st	Z, r24
    1a9c:	91 83       	std	Z+1, r25	; 0x01
    1a9e:	a2 83       	std	Z+2, r26	; 0x02
    1aa0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	ff 96       	adiw	r30, 0x3f	; 63
    1aa6:	60 81       	ld	r22, Z
    1aa8:	71 81       	ldd	r23, Z+1	; 0x01
    1aaa:	82 81       	ldd	r24, Z+2	; 0x02
    1aac:	93 81       	ldd	r25, Z+3	; 0x03
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	40 e8       	ldi	r20, 0x80	; 128
    1ab4:	5f e3       	ldi	r21, 0x3F	; 63
    1ab6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1aba:	88 23       	and	r24, r24
    1abc:	2c f4       	brge	.+10     	; 0x1ac8 <Display_Time+0x246>
		__ticks = 1;
    1abe:	81 e0       	ldi	r24, 0x01	; 1
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	9e af       	std	Y+62, r25	; 0x3e
    1ac4:	8d af       	std	Y+61, r24	; 0x3d
    1ac6:	46 c0       	rjmp	.+140    	; 0x1b54 <Display_Time+0x2d2>
	else if (__tmp > 65535)
    1ac8:	fe 01       	movw	r30, r28
    1aca:	ff 96       	adiw	r30, 0x3f	; 63
    1acc:	60 81       	ld	r22, Z
    1ace:	71 81       	ldd	r23, Z+1	; 0x01
    1ad0:	82 81       	ldd	r24, Z+2	; 0x02
    1ad2:	93 81       	ldd	r25, Z+3	; 0x03
    1ad4:	20 e0       	ldi	r18, 0x00	; 0
    1ad6:	3f ef       	ldi	r19, 0xFF	; 255
    1ad8:	4f e7       	ldi	r20, 0x7F	; 127
    1ada:	57 e4       	ldi	r21, 0x47	; 71
    1adc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ae0:	18 16       	cp	r1, r24
    1ae2:	64 f5       	brge	.+88     	; 0x1b3c <Display_Time+0x2ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ae4:	fe 01       	movw	r30, r28
    1ae6:	ed 5b       	subi	r30, 0xBD	; 189
    1ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aea:	60 81       	ld	r22, Z
    1aec:	71 81       	ldd	r23, Z+1	; 0x01
    1aee:	82 81       	ldd	r24, Z+2	; 0x02
    1af0:	93 81       	ldd	r25, Z+3	; 0x03
    1af2:	20 e0       	ldi	r18, 0x00	; 0
    1af4:	30 e0       	ldi	r19, 0x00	; 0
    1af6:	40 e2       	ldi	r20, 0x20	; 32
    1af8:	51 e4       	ldi	r21, 0x41	; 65
    1afa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1afe:	dc 01       	movw	r26, r24
    1b00:	cb 01       	movw	r24, r22
    1b02:	bc 01       	movw	r22, r24
    1b04:	cd 01       	movw	r24, r26
    1b06:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b0a:	dc 01       	movw	r26, r24
    1b0c:	cb 01       	movw	r24, r22
    1b0e:	9e af       	std	Y+62, r25	; 0x3e
    1b10:	8d af       	std	Y+61, r24	; 0x3d
    1b12:	0f c0       	rjmp	.+30     	; 0x1b32 <Display_Time+0x2b0>
    1b14:	80 e9       	ldi	r24, 0x90	; 144
    1b16:	91 e0       	ldi	r25, 0x01	; 1
    1b18:	9c af       	std	Y+60, r25	; 0x3c
    1b1a:	8b af       	std	Y+59, r24	; 0x3b
    1b1c:	8b ad       	ldd	r24, Y+59	; 0x3b
    1b1e:	9c ad       	ldd	r25, Y+60	; 0x3c
    1b20:	01 97       	sbiw	r24, 0x01	; 1
    1b22:	f1 f7       	brne	.-4      	; 0x1b20 <Display_Time+0x29e>
    1b24:	9c af       	std	Y+60, r25	; 0x3c
    1b26:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b28:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b2a:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b2c:	01 97       	sbiw	r24, 0x01	; 1
    1b2e:	9e af       	std	Y+62, r25	; 0x3e
    1b30:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b32:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b34:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b36:	00 97       	sbiw	r24, 0x00	; 0
    1b38:	69 f7       	brne	.-38     	; 0x1b14 <Display_Time+0x292>
    1b3a:	16 c0       	rjmp	.+44     	; 0x1b68 <Display_Time+0x2e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b3c:	fe 01       	movw	r30, r28
    1b3e:	ff 96       	adiw	r30, 0x3f	; 63
    1b40:	60 81       	ld	r22, Z
    1b42:	71 81       	ldd	r23, Z+1	; 0x01
    1b44:	82 81       	ldd	r24, Z+2	; 0x02
    1b46:	93 81       	ldd	r25, Z+3	; 0x03
    1b48:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b4c:	dc 01       	movw	r26, r24
    1b4e:	cb 01       	movw	r24, r22
    1b50:	9e af       	std	Y+62, r25	; 0x3e
    1b52:	8d af       	std	Y+61, r24	; 0x3d
    1b54:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b56:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b58:	9a af       	std	Y+58, r25	; 0x3a
    1b5a:	89 af       	std	Y+57, r24	; 0x39
    1b5c:	89 ad       	ldd	r24, Y+57	; 0x39
    1b5e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1b60:	01 97       	sbiw	r24, 0x01	; 1
    1b62:	f1 f7       	brne	.-4      	; 0x1b60 <Display_Time+0x2de>
    1b64:	9a af       	std	Y+58, r25	; 0x3a
    1b66:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(2);
	PORTA&=~(1<<PA1);
    1b68:	ab e3       	ldi	r26, 0x3B	; 59
    1b6a:	b0 e0       	ldi	r27, 0x00	; 0
    1b6c:	eb e3       	ldi	r30, 0x3B	; 59
    1b6e:	f0 e0       	ldi	r31, 0x00	; 0
    1b70:	80 81       	ld	r24, Z
    1b72:	8d 7f       	andi	r24, 0xFD	; 253
    1b74:	8c 93       	st	X, r24

	PORTA|=(1<<PA2);
    1b76:	ab e3       	ldi	r26, 0x3B	; 59
    1b78:	b0 e0       	ldi	r27, 0x00	; 0
    1b7a:	eb e3       	ldi	r30, 0x3B	; 59
    1b7c:	f0 e0       	ldi	r31, 0x00	; 0
    1b7e:	80 81       	ld	r24, Z
    1b80:	84 60       	ori	r24, 0x04	; 4
    1b82:	8c 93       	st	X, r24
	PORTC=(PORTC&0)|(min%10);
    1b84:	e5 e3       	ldi	r30, 0x35	; 53
    1b86:	f0 e0       	ldi	r31, 0x00	; 0
    1b88:	80 81       	ld	r24, Z
    1b8a:	e5 e3       	ldi	r30, 0x35	; 53
    1b8c:	f0 e0       	ldi	r31, 0x00	; 0
    1b8e:	80 91 69 00 	lds	r24, 0x0069
    1b92:	9a e0       	ldi	r25, 0x0A	; 10
    1b94:	69 2f       	mov	r22, r25
    1b96:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__udivmodqi4>
    1b9a:	89 2f       	mov	r24, r25
    1b9c:	80 83       	st	Z, r24
    1b9e:	80 e0       	ldi	r24, 0x00	; 0
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	a0 e0       	ldi	r26, 0x00	; 0
    1ba4:	b0 e4       	ldi	r27, 0x40	; 64
    1ba6:	8d ab       	std	Y+53, r24	; 0x35
    1ba8:	9e ab       	std	Y+54, r25	; 0x36
    1baa:	af ab       	std	Y+55, r26	; 0x37
    1bac:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bae:	6d a9       	ldd	r22, Y+53	; 0x35
    1bb0:	7e a9       	ldd	r23, Y+54	; 0x36
    1bb2:	8f a9       	ldd	r24, Y+55	; 0x37
    1bb4:	98 ad       	ldd	r25, Y+56	; 0x38
    1bb6:	20 e0       	ldi	r18, 0x00	; 0
    1bb8:	30 e0       	ldi	r19, 0x00	; 0
    1bba:	4a e7       	ldi	r20, 0x7A	; 122
    1bbc:	55 e4       	ldi	r21, 0x45	; 69
    1bbe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bc2:	dc 01       	movw	r26, r24
    1bc4:	cb 01       	movw	r24, r22
    1bc6:	89 ab       	std	Y+49, r24	; 0x31
    1bc8:	9a ab       	std	Y+50, r25	; 0x32
    1bca:	ab ab       	std	Y+51, r26	; 0x33
    1bcc:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1bce:	69 a9       	ldd	r22, Y+49	; 0x31
    1bd0:	7a a9       	ldd	r23, Y+50	; 0x32
    1bd2:	8b a9       	ldd	r24, Y+51	; 0x33
    1bd4:	9c a9       	ldd	r25, Y+52	; 0x34
    1bd6:	20 e0       	ldi	r18, 0x00	; 0
    1bd8:	30 e0       	ldi	r19, 0x00	; 0
    1bda:	40 e8       	ldi	r20, 0x80	; 128
    1bdc:	5f e3       	ldi	r21, 0x3F	; 63
    1bde:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1be2:	88 23       	and	r24, r24
    1be4:	2c f4       	brge	.+10     	; 0x1bf0 <Display_Time+0x36e>
		__ticks = 1;
    1be6:	81 e0       	ldi	r24, 0x01	; 1
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	98 ab       	std	Y+48, r25	; 0x30
    1bec:	8f a7       	std	Y+47, r24	; 0x2f
    1bee:	3f c0       	rjmp	.+126    	; 0x1c6e <Display_Time+0x3ec>
	else if (__tmp > 65535)
    1bf0:	69 a9       	ldd	r22, Y+49	; 0x31
    1bf2:	7a a9       	ldd	r23, Y+50	; 0x32
    1bf4:	8b a9       	ldd	r24, Y+51	; 0x33
    1bf6:	9c a9       	ldd	r25, Y+52	; 0x34
    1bf8:	20 e0       	ldi	r18, 0x00	; 0
    1bfa:	3f ef       	ldi	r19, 0xFF	; 255
    1bfc:	4f e7       	ldi	r20, 0x7F	; 127
    1bfe:	57 e4       	ldi	r21, 0x47	; 71
    1c00:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c04:	18 16       	cp	r1, r24
    1c06:	4c f5       	brge	.+82     	; 0x1c5a <Display_Time+0x3d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c08:	6d a9       	ldd	r22, Y+53	; 0x35
    1c0a:	7e a9       	ldd	r23, Y+54	; 0x36
    1c0c:	8f a9       	ldd	r24, Y+55	; 0x37
    1c0e:	98 ad       	ldd	r25, Y+56	; 0x38
    1c10:	20 e0       	ldi	r18, 0x00	; 0
    1c12:	30 e0       	ldi	r19, 0x00	; 0
    1c14:	40 e2       	ldi	r20, 0x20	; 32
    1c16:	51 e4       	ldi	r21, 0x41	; 65
    1c18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c1c:	dc 01       	movw	r26, r24
    1c1e:	cb 01       	movw	r24, r22
    1c20:	bc 01       	movw	r22, r24
    1c22:	cd 01       	movw	r24, r26
    1c24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c28:	dc 01       	movw	r26, r24
    1c2a:	cb 01       	movw	r24, r22
    1c2c:	98 ab       	std	Y+48, r25	; 0x30
    1c2e:	8f a7       	std	Y+47, r24	; 0x2f
    1c30:	0f c0       	rjmp	.+30     	; 0x1c50 <Display_Time+0x3ce>
    1c32:	80 e9       	ldi	r24, 0x90	; 144
    1c34:	91 e0       	ldi	r25, 0x01	; 1
    1c36:	9e a7       	std	Y+46, r25	; 0x2e
    1c38:	8d a7       	std	Y+45, r24	; 0x2d
    1c3a:	8d a5       	ldd	r24, Y+45	; 0x2d
    1c3c:	9e a5       	ldd	r25, Y+46	; 0x2e
    1c3e:	01 97       	sbiw	r24, 0x01	; 1
    1c40:	f1 f7       	brne	.-4      	; 0x1c3e <Display_Time+0x3bc>
    1c42:	9e a7       	std	Y+46, r25	; 0x2e
    1c44:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c46:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c48:	98 a9       	ldd	r25, Y+48	; 0x30
    1c4a:	01 97       	sbiw	r24, 0x01	; 1
    1c4c:	98 ab       	std	Y+48, r25	; 0x30
    1c4e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c50:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c52:	98 a9       	ldd	r25, Y+48	; 0x30
    1c54:	00 97       	sbiw	r24, 0x00	; 0
    1c56:	69 f7       	brne	.-38     	; 0x1c32 <Display_Time+0x3b0>
    1c58:	14 c0       	rjmp	.+40     	; 0x1c82 <Display_Time+0x400>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c5a:	69 a9       	ldd	r22, Y+49	; 0x31
    1c5c:	7a a9       	ldd	r23, Y+50	; 0x32
    1c5e:	8b a9       	ldd	r24, Y+51	; 0x33
    1c60:	9c a9       	ldd	r25, Y+52	; 0x34
    1c62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c66:	dc 01       	movw	r26, r24
    1c68:	cb 01       	movw	r24, r22
    1c6a:	98 ab       	std	Y+48, r25	; 0x30
    1c6c:	8f a7       	std	Y+47, r24	; 0x2f
    1c6e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c70:	98 a9       	ldd	r25, Y+48	; 0x30
    1c72:	9c a7       	std	Y+44, r25	; 0x2c
    1c74:	8b a7       	std	Y+43, r24	; 0x2b
    1c76:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c78:	9c a5       	ldd	r25, Y+44	; 0x2c
    1c7a:	01 97       	sbiw	r24, 0x01	; 1
    1c7c:	f1 f7       	brne	.-4      	; 0x1c7a <Display_Time+0x3f8>
    1c7e:	9c a7       	std	Y+44, r25	; 0x2c
    1c80:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(2);
	PORTA&=~(1<<PA2);
    1c82:	ab e3       	ldi	r26, 0x3B	; 59
    1c84:	b0 e0       	ldi	r27, 0x00	; 0
    1c86:	eb e3       	ldi	r30, 0x3B	; 59
    1c88:	f0 e0       	ldi	r31, 0x00	; 0
    1c8a:	80 81       	ld	r24, Z
    1c8c:	8b 7f       	andi	r24, 0xFB	; 251
    1c8e:	8c 93       	st	X, r24

	PORTA|=(1<<PA3);
    1c90:	ab e3       	ldi	r26, 0x3B	; 59
    1c92:	b0 e0       	ldi	r27, 0x00	; 0
    1c94:	eb e3       	ldi	r30, 0x3B	; 59
    1c96:	f0 e0       	ldi	r31, 0x00	; 0
    1c98:	80 81       	ld	r24, Z
    1c9a:	88 60       	ori	r24, 0x08	; 8
    1c9c:	8c 93       	st	X, r24
	PORTC=(PORTC&0)|(min/10);
    1c9e:	e5 e3       	ldi	r30, 0x35	; 53
    1ca0:	f0 e0       	ldi	r31, 0x00	; 0
    1ca2:	80 81       	ld	r24, Z
    1ca4:	e5 e3       	ldi	r30, 0x35	; 53
    1ca6:	f0 e0       	ldi	r31, 0x00	; 0
    1ca8:	80 91 69 00 	lds	r24, 0x0069
    1cac:	9a e0       	ldi	r25, 0x0A	; 10
    1cae:	69 2f       	mov	r22, r25
    1cb0:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__udivmodqi4>
    1cb4:	80 83       	st	Z, r24
    1cb6:	80 e0       	ldi	r24, 0x00	; 0
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	a0 e0       	ldi	r26, 0x00	; 0
    1cbc:	b0 e4       	ldi	r27, 0x40	; 64
    1cbe:	8f a3       	std	Y+39, r24	; 0x27
    1cc0:	98 a7       	std	Y+40, r25	; 0x28
    1cc2:	a9 a7       	std	Y+41, r26	; 0x29
    1cc4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cc6:	6f a1       	ldd	r22, Y+39	; 0x27
    1cc8:	78 a5       	ldd	r23, Y+40	; 0x28
    1cca:	89 a5       	ldd	r24, Y+41	; 0x29
    1ccc:	9a a5       	ldd	r25, Y+42	; 0x2a
    1cce:	20 e0       	ldi	r18, 0x00	; 0
    1cd0:	30 e0       	ldi	r19, 0x00	; 0
    1cd2:	4a e7       	ldi	r20, 0x7A	; 122
    1cd4:	55 e4       	ldi	r21, 0x45	; 69
    1cd6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cda:	dc 01       	movw	r26, r24
    1cdc:	cb 01       	movw	r24, r22
    1cde:	8b a3       	std	Y+35, r24	; 0x23
    1ce0:	9c a3       	std	Y+36, r25	; 0x24
    1ce2:	ad a3       	std	Y+37, r26	; 0x25
    1ce4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1ce6:	6b a1       	ldd	r22, Y+35	; 0x23
    1ce8:	7c a1       	ldd	r23, Y+36	; 0x24
    1cea:	8d a1       	ldd	r24, Y+37	; 0x25
    1cec:	9e a1       	ldd	r25, Y+38	; 0x26
    1cee:	20 e0       	ldi	r18, 0x00	; 0
    1cf0:	30 e0       	ldi	r19, 0x00	; 0
    1cf2:	40 e8       	ldi	r20, 0x80	; 128
    1cf4:	5f e3       	ldi	r21, 0x3F	; 63
    1cf6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1cfa:	88 23       	and	r24, r24
    1cfc:	2c f4       	brge	.+10     	; 0x1d08 <Display_Time+0x486>
		__ticks = 1;
    1cfe:	81 e0       	ldi	r24, 0x01	; 1
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	9a a3       	std	Y+34, r25	; 0x22
    1d04:	89 a3       	std	Y+33, r24	; 0x21
    1d06:	3f c0       	rjmp	.+126    	; 0x1d86 <Display_Time+0x504>
	else if (__tmp > 65535)
    1d08:	6b a1       	ldd	r22, Y+35	; 0x23
    1d0a:	7c a1       	ldd	r23, Y+36	; 0x24
    1d0c:	8d a1       	ldd	r24, Y+37	; 0x25
    1d0e:	9e a1       	ldd	r25, Y+38	; 0x26
    1d10:	20 e0       	ldi	r18, 0x00	; 0
    1d12:	3f ef       	ldi	r19, 0xFF	; 255
    1d14:	4f e7       	ldi	r20, 0x7F	; 127
    1d16:	57 e4       	ldi	r21, 0x47	; 71
    1d18:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d1c:	18 16       	cp	r1, r24
    1d1e:	4c f5       	brge	.+82     	; 0x1d72 <Display_Time+0x4f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d20:	6f a1       	ldd	r22, Y+39	; 0x27
    1d22:	78 a5       	ldd	r23, Y+40	; 0x28
    1d24:	89 a5       	ldd	r24, Y+41	; 0x29
    1d26:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d28:	20 e0       	ldi	r18, 0x00	; 0
    1d2a:	30 e0       	ldi	r19, 0x00	; 0
    1d2c:	40 e2       	ldi	r20, 0x20	; 32
    1d2e:	51 e4       	ldi	r21, 0x41	; 65
    1d30:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d34:	dc 01       	movw	r26, r24
    1d36:	cb 01       	movw	r24, r22
    1d38:	bc 01       	movw	r22, r24
    1d3a:	cd 01       	movw	r24, r26
    1d3c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d40:	dc 01       	movw	r26, r24
    1d42:	cb 01       	movw	r24, r22
    1d44:	9a a3       	std	Y+34, r25	; 0x22
    1d46:	89 a3       	std	Y+33, r24	; 0x21
    1d48:	0f c0       	rjmp	.+30     	; 0x1d68 <Display_Time+0x4e6>
    1d4a:	80 e9       	ldi	r24, 0x90	; 144
    1d4c:	91 e0       	ldi	r25, 0x01	; 1
    1d4e:	98 a3       	std	Y+32, r25	; 0x20
    1d50:	8f 8f       	std	Y+31, r24	; 0x1f
    1d52:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d54:	98 a1       	ldd	r25, Y+32	; 0x20
    1d56:	01 97       	sbiw	r24, 0x01	; 1
    1d58:	f1 f7       	brne	.-4      	; 0x1d56 <Display_Time+0x4d4>
    1d5a:	98 a3       	std	Y+32, r25	; 0x20
    1d5c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d5e:	89 a1       	ldd	r24, Y+33	; 0x21
    1d60:	9a a1       	ldd	r25, Y+34	; 0x22
    1d62:	01 97       	sbiw	r24, 0x01	; 1
    1d64:	9a a3       	std	Y+34, r25	; 0x22
    1d66:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d68:	89 a1       	ldd	r24, Y+33	; 0x21
    1d6a:	9a a1       	ldd	r25, Y+34	; 0x22
    1d6c:	00 97       	sbiw	r24, 0x00	; 0
    1d6e:	69 f7       	brne	.-38     	; 0x1d4a <Display_Time+0x4c8>
    1d70:	14 c0       	rjmp	.+40     	; 0x1d9a <Display_Time+0x518>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d72:	6b a1       	ldd	r22, Y+35	; 0x23
    1d74:	7c a1       	ldd	r23, Y+36	; 0x24
    1d76:	8d a1       	ldd	r24, Y+37	; 0x25
    1d78:	9e a1       	ldd	r25, Y+38	; 0x26
    1d7a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d7e:	dc 01       	movw	r26, r24
    1d80:	cb 01       	movw	r24, r22
    1d82:	9a a3       	std	Y+34, r25	; 0x22
    1d84:	89 a3       	std	Y+33, r24	; 0x21
    1d86:	89 a1       	ldd	r24, Y+33	; 0x21
    1d88:	9a a1       	ldd	r25, Y+34	; 0x22
    1d8a:	9e 8f       	std	Y+30, r25	; 0x1e
    1d8c:	8d 8f       	std	Y+29, r24	; 0x1d
    1d8e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d90:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d92:	01 97       	sbiw	r24, 0x01	; 1
    1d94:	f1 f7       	brne	.-4      	; 0x1d92 <Display_Time+0x510>
    1d96:	9e 8f       	std	Y+30, r25	; 0x1e
    1d98:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	PORTA&=~(1<<PA3);
    1d9a:	ab e3       	ldi	r26, 0x3B	; 59
    1d9c:	b0 e0       	ldi	r27, 0x00	; 0
    1d9e:	eb e3       	ldi	r30, 0x3B	; 59
    1da0:	f0 e0       	ldi	r31, 0x00	; 0
    1da2:	80 81       	ld	r24, Z
    1da4:	87 7f       	andi	r24, 0xF7	; 247
    1da6:	8c 93       	st	X, r24

	PORTA|=(1<<PA4);
    1da8:	ab e3       	ldi	r26, 0x3B	; 59
    1daa:	b0 e0       	ldi	r27, 0x00	; 0
    1dac:	eb e3       	ldi	r30, 0x3B	; 59
    1dae:	f0 e0       	ldi	r31, 0x00	; 0
    1db0:	80 81       	ld	r24, Z
    1db2:	80 61       	ori	r24, 0x10	; 16
    1db4:	8c 93       	st	X, r24
	PORTC=(PORTC&0)|(hrs%10);
    1db6:	e5 e3       	ldi	r30, 0x35	; 53
    1db8:	f0 e0       	ldi	r31, 0x00	; 0
    1dba:	80 81       	ld	r24, Z
    1dbc:	e5 e3       	ldi	r30, 0x35	; 53
    1dbe:	f0 e0       	ldi	r31, 0x00	; 0
    1dc0:	80 91 6a 00 	lds	r24, 0x006A
    1dc4:	9a e0       	ldi	r25, 0x0A	; 10
    1dc6:	69 2f       	mov	r22, r25
    1dc8:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__udivmodqi4>
    1dcc:	89 2f       	mov	r24, r25
    1dce:	80 83       	st	Z, r24
    1dd0:	80 e0       	ldi	r24, 0x00	; 0
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	a0 e0       	ldi	r26, 0x00	; 0
    1dd6:	b0 e4       	ldi	r27, 0x40	; 64
    1dd8:	89 8f       	std	Y+25, r24	; 0x19
    1dda:	9a 8f       	std	Y+26, r25	; 0x1a
    1ddc:	ab 8f       	std	Y+27, r26	; 0x1b
    1dde:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1de0:	69 8d       	ldd	r22, Y+25	; 0x19
    1de2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1de4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1de6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1de8:	20 e0       	ldi	r18, 0x00	; 0
    1dea:	30 e0       	ldi	r19, 0x00	; 0
    1dec:	4a e7       	ldi	r20, 0x7A	; 122
    1dee:	55 e4       	ldi	r21, 0x45	; 69
    1df0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1df4:	dc 01       	movw	r26, r24
    1df6:	cb 01       	movw	r24, r22
    1df8:	8d 8b       	std	Y+21, r24	; 0x15
    1dfa:	9e 8b       	std	Y+22, r25	; 0x16
    1dfc:	af 8b       	std	Y+23, r26	; 0x17
    1dfe:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e00:	6d 89       	ldd	r22, Y+21	; 0x15
    1e02:	7e 89       	ldd	r23, Y+22	; 0x16
    1e04:	8f 89       	ldd	r24, Y+23	; 0x17
    1e06:	98 8d       	ldd	r25, Y+24	; 0x18
    1e08:	20 e0       	ldi	r18, 0x00	; 0
    1e0a:	30 e0       	ldi	r19, 0x00	; 0
    1e0c:	40 e8       	ldi	r20, 0x80	; 128
    1e0e:	5f e3       	ldi	r21, 0x3F	; 63
    1e10:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1e14:	88 23       	and	r24, r24
    1e16:	2c f4       	brge	.+10     	; 0x1e22 <Display_Time+0x5a0>
		__ticks = 1;
    1e18:	81 e0       	ldi	r24, 0x01	; 1
    1e1a:	90 e0       	ldi	r25, 0x00	; 0
    1e1c:	9c 8b       	std	Y+20, r25	; 0x14
    1e1e:	8b 8b       	std	Y+19, r24	; 0x13
    1e20:	3f c0       	rjmp	.+126    	; 0x1ea0 <Display_Time+0x61e>
	else if (__tmp > 65535)
    1e22:	6d 89       	ldd	r22, Y+21	; 0x15
    1e24:	7e 89       	ldd	r23, Y+22	; 0x16
    1e26:	8f 89       	ldd	r24, Y+23	; 0x17
    1e28:	98 8d       	ldd	r25, Y+24	; 0x18
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	3f ef       	ldi	r19, 0xFF	; 255
    1e2e:	4f e7       	ldi	r20, 0x7F	; 127
    1e30:	57 e4       	ldi	r21, 0x47	; 71
    1e32:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e36:	18 16       	cp	r1, r24
    1e38:	4c f5       	brge	.+82     	; 0x1e8c <Display_Time+0x60a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e3a:	69 8d       	ldd	r22, Y+25	; 0x19
    1e3c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e3e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e40:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e42:	20 e0       	ldi	r18, 0x00	; 0
    1e44:	30 e0       	ldi	r19, 0x00	; 0
    1e46:	40 e2       	ldi	r20, 0x20	; 32
    1e48:	51 e4       	ldi	r21, 0x41	; 65
    1e4a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e4e:	dc 01       	movw	r26, r24
    1e50:	cb 01       	movw	r24, r22
    1e52:	bc 01       	movw	r22, r24
    1e54:	cd 01       	movw	r24, r26
    1e56:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e5a:	dc 01       	movw	r26, r24
    1e5c:	cb 01       	movw	r24, r22
    1e5e:	9c 8b       	std	Y+20, r25	; 0x14
    1e60:	8b 8b       	std	Y+19, r24	; 0x13
    1e62:	0f c0       	rjmp	.+30     	; 0x1e82 <Display_Time+0x600>
    1e64:	80 e9       	ldi	r24, 0x90	; 144
    1e66:	91 e0       	ldi	r25, 0x01	; 1
    1e68:	9a 8b       	std	Y+18, r25	; 0x12
    1e6a:	89 8b       	std	Y+17, r24	; 0x11
    1e6c:	89 89       	ldd	r24, Y+17	; 0x11
    1e6e:	9a 89       	ldd	r25, Y+18	; 0x12
    1e70:	01 97       	sbiw	r24, 0x01	; 1
    1e72:	f1 f7       	brne	.-4      	; 0x1e70 <Display_Time+0x5ee>
    1e74:	9a 8b       	std	Y+18, r25	; 0x12
    1e76:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e78:	8b 89       	ldd	r24, Y+19	; 0x13
    1e7a:	9c 89       	ldd	r25, Y+20	; 0x14
    1e7c:	01 97       	sbiw	r24, 0x01	; 1
    1e7e:	9c 8b       	std	Y+20, r25	; 0x14
    1e80:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e82:	8b 89       	ldd	r24, Y+19	; 0x13
    1e84:	9c 89       	ldd	r25, Y+20	; 0x14
    1e86:	00 97       	sbiw	r24, 0x00	; 0
    1e88:	69 f7       	brne	.-38     	; 0x1e64 <Display_Time+0x5e2>
    1e8a:	14 c0       	rjmp	.+40     	; 0x1eb4 <Display_Time+0x632>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e8c:	6d 89       	ldd	r22, Y+21	; 0x15
    1e8e:	7e 89       	ldd	r23, Y+22	; 0x16
    1e90:	8f 89       	ldd	r24, Y+23	; 0x17
    1e92:	98 8d       	ldd	r25, Y+24	; 0x18
    1e94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e98:	dc 01       	movw	r26, r24
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	9c 8b       	std	Y+20, r25	; 0x14
    1e9e:	8b 8b       	std	Y+19, r24	; 0x13
    1ea0:	8b 89       	ldd	r24, Y+19	; 0x13
    1ea2:	9c 89       	ldd	r25, Y+20	; 0x14
    1ea4:	98 8b       	std	Y+16, r25	; 0x10
    1ea6:	8f 87       	std	Y+15, r24	; 0x0f
    1ea8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1eaa:	98 89       	ldd	r25, Y+16	; 0x10
    1eac:	01 97       	sbiw	r24, 0x01	; 1
    1eae:	f1 f7       	brne	.-4      	; 0x1eac <Display_Time+0x62a>
    1eb0:	98 8b       	std	Y+16, r25	; 0x10
    1eb2:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	PORTA&=~(1<<PA4);
    1eb4:	ab e3       	ldi	r26, 0x3B	; 59
    1eb6:	b0 e0       	ldi	r27, 0x00	; 0
    1eb8:	eb e3       	ldi	r30, 0x3B	; 59
    1eba:	f0 e0       	ldi	r31, 0x00	; 0
    1ebc:	80 81       	ld	r24, Z
    1ebe:	8f 7e       	andi	r24, 0xEF	; 239
    1ec0:	8c 93       	st	X, r24

	PORTA|=(1<<PA5);
    1ec2:	ab e3       	ldi	r26, 0x3B	; 59
    1ec4:	b0 e0       	ldi	r27, 0x00	; 0
    1ec6:	eb e3       	ldi	r30, 0x3B	; 59
    1ec8:	f0 e0       	ldi	r31, 0x00	; 0
    1eca:	80 81       	ld	r24, Z
    1ecc:	80 62       	ori	r24, 0x20	; 32
    1ece:	8c 93       	st	X, r24
	PORTC=(PORTC&0)|(hrs/10);
    1ed0:	e5 e3       	ldi	r30, 0x35	; 53
    1ed2:	f0 e0       	ldi	r31, 0x00	; 0
    1ed4:	80 81       	ld	r24, Z
    1ed6:	e5 e3       	ldi	r30, 0x35	; 53
    1ed8:	f0 e0       	ldi	r31, 0x00	; 0
    1eda:	80 91 6a 00 	lds	r24, 0x006A
    1ede:	9a e0       	ldi	r25, 0x0A	; 10
    1ee0:	69 2f       	mov	r22, r25
    1ee2:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__udivmodqi4>
    1ee6:	80 83       	st	Z, r24
    1ee8:	80 e0       	ldi	r24, 0x00	; 0
    1eea:	90 e0       	ldi	r25, 0x00	; 0
    1eec:	a0 e0       	ldi	r26, 0x00	; 0
    1eee:	b0 e4       	ldi	r27, 0x40	; 64
    1ef0:	8b 87       	std	Y+11, r24	; 0x0b
    1ef2:	9c 87       	std	Y+12, r25	; 0x0c
    1ef4:	ad 87       	std	Y+13, r26	; 0x0d
    1ef6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ef8:	6b 85       	ldd	r22, Y+11	; 0x0b
    1efa:	7c 85       	ldd	r23, Y+12	; 0x0c
    1efc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1efe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f00:	20 e0       	ldi	r18, 0x00	; 0
    1f02:	30 e0       	ldi	r19, 0x00	; 0
    1f04:	4a e7       	ldi	r20, 0x7A	; 122
    1f06:	55 e4       	ldi	r21, 0x45	; 69
    1f08:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f0c:	dc 01       	movw	r26, r24
    1f0e:	cb 01       	movw	r24, r22
    1f10:	8f 83       	std	Y+7, r24	; 0x07
    1f12:	98 87       	std	Y+8, r25	; 0x08
    1f14:	a9 87       	std	Y+9, r26	; 0x09
    1f16:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f18:	6f 81       	ldd	r22, Y+7	; 0x07
    1f1a:	78 85       	ldd	r23, Y+8	; 0x08
    1f1c:	89 85       	ldd	r24, Y+9	; 0x09
    1f1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f20:	20 e0       	ldi	r18, 0x00	; 0
    1f22:	30 e0       	ldi	r19, 0x00	; 0
    1f24:	40 e8       	ldi	r20, 0x80	; 128
    1f26:	5f e3       	ldi	r21, 0x3F	; 63
    1f28:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1f2c:	88 23       	and	r24, r24
    1f2e:	2c f4       	brge	.+10     	; 0x1f3a <Display_Time+0x6b8>
		__ticks = 1;
    1f30:	81 e0       	ldi	r24, 0x01	; 1
    1f32:	90 e0       	ldi	r25, 0x00	; 0
    1f34:	9e 83       	std	Y+6, r25	; 0x06
    1f36:	8d 83       	std	Y+5, r24	; 0x05
    1f38:	3f c0       	rjmp	.+126    	; 0x1fb8 <Display_Time+0x736>
	else if (__tmp > 65535)
    1f3a:	6f 81       	ldd	r22, Y+7	; 0x07
    1f3c:	78 85       	ldd	r23, Y+8	; 0x08
    1f3e:	89 85       	ldd	r24, Y+9	; 0x09
    1f40:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f42:	20 e0       	ldi	r18, 0x00	; 0
    1f44:	3f ef       	ldi	r19, 0xFF	; 255
    1f46:	4f e7       	ldi	r20, 0x7F	; 127
    1f48:	57 e4       	ldi	r21, 0x47	; 71
    1f4a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f4e:	18 16       	cp	r1, r24
    1f50:	4c f5       	brge	.+82     	; 0x1fa4 <Display_Time+0x722>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f52:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f54:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f56:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f58:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f5a:	20 e0       	ldi	r18, 0x00	; 0
    1f5c:	30 e0       	ldi	r19, 0x00	; 0
    1f5e:	40 e2       	ldi	r20, 0x20	; 32
    1f60:	51 e4       	ldi	r21, 0x41	; 65
    1f62:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f66:	dc 01       	movw	r26, r24
    1f68:	cb 01       	movw	r24, r22
    1f6a:	bc 01       	movw	r22, r24
    1f6c:	cd 01       	movw	r24, r26
    1f6e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f72:	dc 01       	movw	r26, r24
    1f74:	cb 01       	movw	r24, r22
    1f76:	9e 83       	std	Y+6, r25	; 0x06
    1f78:	8d 83       	std	Y+5, r24	; 0x05
    1f7a:	0f c0       	rjmp	.+30     	; 0x1f9a <Display_Time+0x718>
    1f7c:	80 e9       	ldi	r24, 0x90	; 144
    1f7e:	91 e0       	ldi	r25, 0x01	; 1
    1f80:	9c 83       	std	Y+4, r25	; 0x04
    1f82:	8b 83       	std	Y+3, r24	; 0x03
    1f84:	8b 81       	ldd	r24, Y+3	; 0x03
    1f86:	9c 81       	ldd	r25, Y+4	; 0x04
    1f88:	01 97       	sbiw	r24, 0x01	; 1
    1f8a:	f1 f7       	brne	.-4      	; 0x1f88 <Display_Time+0x706>
    1f8c:	9c 83       	std	Y+4, r25	; 0x04
    1f8e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f90:	8d 81       	ldd	r24, Y+5	; 0x05
    1f92:	9e 81       	ldd	r25, Y+6	; 0x06
    1f94:	01 97       	sbiw	r24, 0x01	; 1
    1f96:	9e 83       	std	Y+6, r25	; 0x06
    1f98:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f9a:	8d 81       	ldd	r24, Y+5	; 0x05
    1f9c:	9e 81       	ldd	r25, Y+6	; 0x06
    1f9e:	00 97       	sbiw	r24, 0x00	; 0
    1fa0:	69 f7       	brne	.-38     	; 0x1f7c <Display_Time+0x6fa>
    1fa2:	14 c0       	rjmp	.+40     	; 0x1fcc <Display_Time+0x74a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fa4:	6f 81       	ldd	r22, Y+7	; 0x07
    1fa6:	78 85       	ldd	r23, Y+8	; 0x08
    1fa8:	89 85       	ldd	r24, Y+9	; 0x09
    1faa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fb0:	dc 01       	movw	r26, r24
    1fb2:	cb 01       	movw	r24, r22
    1fb4:	9e 83       	std	Y+6, r25	; 0x06
    1fb6:	8d 83       	std	Y+5, r24	; 0x05
    1fb8:	8d 81       	ldd	r24, Y+5	; 0x05
    1fba:	9e 81       	ldd	r25, Y+6	; 0x06
    1fbc:	9a 83       	std	Y+2, r25	; 0x02
    1fbe:	89 83       	std	Y+1, r24	; 0x01
    1fc0:	89 81       	ldd	r24, Y+1	; 0x01
    1fc2:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc4:	01 97       	sbiw	r24, 0x01	; 1
    1fc6:	f1 f7       	brne	.-4      	; 0x1fc4 <Display_Time+0x742>
    1fc8:	9a 83       	std	Y+2, r25	; 0x02
    1fca:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	PORTA&=~(1<<PA5);
    1fcc:	ab e3       	ldi	r26, 0x3B	; 59
    1fce:	b0 e0       	ldi	r27, 0x00	; 0
    1fd0:	eb e3       	ldi	r30, 0x3B	; 59
    1fd2:	f0 e0       	ldi	r31, 0x00	; 0
    1fd4:	80 81       	ld	r24, Z
    1fd6:	8f 7d       	andi	r24, 0xDF	; 223
    1fd8:	8c 93       	st	X, r24
}
    1fda:	c6 5a       	subi	r28, 0xA6	; 166
    1fdc:	df 4f       	sbci	r29, 0xFF	; 255
    1fde:	0f b6       	in	r0, 0x3f	; 63
    1fe0:	f8 94       	cli
    1fe2:	de bf       	out	0x3e, r29	; 62
    1fe4:	0f be       	out	0x3f, r0	; 63
    1fe6:	cd bf       	out	0x3d, r28	; 61
    1fe8:	cf 91       	pop	r28
    1fea:	df 91       	pop	r29
    1fec:	1f 91       	pop	r17
    1fee:	0f 91       	pop	r16
    1ff0:	08 95       	ret

00001ff2 <__udivmodqi4>:
    1ff2:	99 1b       	sub	r25, r25
    1ff4:	79 e0       	ldi	r23, 0x09	; 9
    1ff6:	04 c0       	rjmp	.+8      	; 0x2000 <__udivmodqi4_ep>

00001ff8 <__udivmodqi4_loop>:
    1ff8:	99 1f       	adc	r25, r25
    1ffa:	96 17       	cp	r25, r22
    1ffc:	08 f0       	brcs	.+2      	; 0x2000 <__udivmodqi4_ep>
    1ffe:	96 1b       	sub	r25, r22

00002000 <__udivmodqi4_ep>:
    2000:	88 1f       	adc	r24, r24
    2002:	7a 95       	dec	r23
    2004:	c9 f7       	brne	.-14     	; 0x1ff8 <__udivmodqi4_loop>
    2006:	80 95       	com	r24
    2008:	08 95       	ret

0000200a <__prologue_saves__>:
    200a:	2f 92       	push	r2
    200c:	3f 92       	push	r3
    200e:	4f 92       	push	r4
    2010:	5f 92       	push	r5
    2012:	6f 92       	push	r6
    2014:	7f 92       	push	r7
    2016:	8f 92       	push	r8
    2018:	9f 92       	push	r9
    201a:	af 92       	push	r10
    201c:	bf 92       	push	r11
    201e:	cf 92       	push	r12
    2020:	df 92       	push	r13
    2022:	ef 92       	push	r14
    2024:	ff 92       	push	r15
    2026:	0f 93       	push	r16
    2028:	1f 93       	push	r17
    202a:	cf 93       	push	r28
    202c:	df 93       	push	r29
    202e:	cd b7       	in	r28, 0x3d	; 61
    2030:	de b7       	in	r29, 0x3e	; 62
    2032:	ca 1b       	sub	r28, r26
    2034:	db 0b       	sbc	r29, r27
    2036:	0f b6       	in	r0, 0x3f	; 63
    2038:	f8 94       	cli
    203a:	de bf       	out	0x3e, r29	; 62
    203c:	0f be       	out	0x3f, r0	; 63
    203e:	cd bf       	out	0x3d, r28	; 61
    2040:	09 94       	ijmp

00002042 <__epilogue_restores__>:
    2042:	2a 88       	ldd	r2, Y+18	; 0x12
    2044:	39 88       	ldd	r3, Y+17	; 0x11
    2046:	48 88       	ldd	r4, Y+16	; 0x10
    2048:	5f 84       	ldd	r5, Y+15	; 0x0f
    204a:	6e 84       	ldd	r6, Y+14	; 0x0e
    204c:	7d 84       	ldd	r7, Y+13	; 0x0d
    204e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2050:	9b 84       	ldd	r9, Y+11	; 0x0b
    2052:	aa 84       	ldd	r10, Y+10	; 0x0a
    2054:	b9 84       	ldd	r11, Y+9	; 0x09
    2056:	c8 84       	ldd	r12, Y+8	; 0x08
    2058:	df 80       	ldd	r13, Y+7	; 0x07
    205a:	ee 80       	ldd	r14, Y+6	; 0x06
    205c:	fd 80       	ldd	r15, Y+5	; 0x05
    205e:	0c 81       	ldd	r16, Y+4	; 0x04
    2060:	1b 81       	ldd	r17, Y+3	; 0x03
    2062:	aa 81       	ldd	r26, Y+2	; 0x02
    2064:	b9 81       	ldd	r27, Y+1	; 0x01
    2066:	ce 0f       	add	r28, r30
    2068:	d1 1d       	adc	r29, r1
    206a:	0f b6       	in	r0, 0x3f	; 63
    206c:	f8 94       	cli
    206e:	de bf       	out	0x3e, r29	; 62
    2070:	0f be       	out	0x3f, r0	; 63
    2072:	cd bf       	out	0x3d, r28	; 61
    2074:	ed 01       	movw	r28, r26
    2076:	08 95       	ret

00002078 <_exit>:
    2078:	f8 94       	cli

0000207a <__stop_program>:
    207a:	ff cf       	rjmp	.-2      	; 0x207a <__stop_program>
